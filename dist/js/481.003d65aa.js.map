{"version":3,"file":"js/481.003d65aa.js","mappings":"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","sources":["webpack://SMGS/./src/components/LoginForm.vue","webpack://SMGS/src/components/LoginForm.vue","webpack://SMGS/./src/components/LoginForm.vue?0de6","webpack://SMGS/./src/components/LoginForm.vue?f654"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-box\"},[_vm._m(0),_c('transition',{attrs:{\"name\":\"plus-icon\"}},[(_vm.pageOneShow)?[_c('div',{staticClass:\"login-form\"},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.styleData.login_type === 'sso')?_c('div',{staticClass:\"login-other\"},_vm._l((_vm.allObj.loginWays),function(item){return _c('button',{key:item.SyName,staticClass:\"workwechat-login\"},[_c('a',{staticClass:\"workwechat\",attrs:{\"title\":item.WayName,\"href\":item.WayToUrl}},[_c('p',{staticClass:\"login-font\"},[_c('img',{staticClass:\"workwechat-img\",attrs:{\"src\":item.WayImgUrl,\"alt\":\"\"}}),_vm._v(\" \"+_vm._s(_vm._f(\"capitalize\")(item.WayName))+\" \")])])])}),0):_c('div',[_c('el-form',{ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.ruleFormData}},[_c('el-form-item',{staticClass:\"form-items\",attrs:{\"prop\":_vm.EMAIL_REGEX.test(_vm.ruleFormData.username)\n                                        ? 'userEmail'\n                                        : _vm.MOBILENUM_REGEX.test(_vm.ruleFormData.username)\n                                        ? 'username'\n                                        : 'otheruser'}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"Please enter your email\"},model:{value:(_vm.ruleFormData.username),callback:function ($$v) {_vm.$set(_vm.ruleFormData, \"username\", $$v)},expression:\"ruleFormData.username\"}})],1),_c('el-form-item',{staticClass:\"form-items\",attrs:{\"prop\":\"password\"}},[_c('el-input',{attrs:{\"placeholder\":\"Enter password\",\"show-password\":\"\",\"clearable\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.submitFormToken('ruleForm')}},model:{value:(_vm.ruleFormData.password),callback:function ($$v) {_vm.$set(_vm.ruleFormData, \"password\", $$v)},expression:\"ruleFormData.password\"}})],1),(_vm.isAdmin)?_c('el-form-item',[_c('div',{attrs:{\"id\":\"text_login\"}},[_c('div',{staticClass:\"forget-password\",on:{\"click\":_vm.toForgetPage}},[_c('span',[_vm._v(\"Forgot Password?\")])])])]):_vm._e(),_c('el-form-item',{staticClass:\"form-items\"},[_c('div',{staticClass:\"box-form-out\"},[_c('div',{staticClass:\"box-form-out-in-box\"},[_c('div',{staticClass:\"box-form-out-inner\"},[_c('el-button',{staticClass:\"btn\",on:{\"click\":function($event){return _vm.submitFormToken('ruleForm')}}},[_c('span',[_vm._v(\"LOGIN\")])]),_c('div',{staticClass:\"forget-pwd\"})],1)])])])],1),_c('el-dialog',{attrs:{\"title\":\"Swipe And Verify\",\"visible\":_vm.dialogVisible,\"width\":_vm.dialogWidth,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('DragVerify',{key:_vm.mainKey,attrs:{\"message\":{ isPass: _vm.isPass, dialogVisible: _vm.dialogVisible, isFailed: _vm.isFailed }},on:{\"sendMessage\":_vm.sendMessage,\"sendFiledMessage\":_vm.sendFiledMessage}})],1)],1)]),(_vm.isAdmin)?_c('div',{staticClass:\"bottom-text-signup\"},[_c('div',[_c('p',[_vm._v(\"Don’t have an account? \"),_c('span',{on:{\"click\":_vm.toSignUp}},[_vm._v(\"Sign Up\")])])])]):_vm._e()],1)]:(_vm.pageTwoShow)?[_c('div',[_c('el-form',{ref:\"ruleFormCode\",attrs:{\"rules\":_vm.rulesCode,\"model\":_vm.CodeFormData}},[_c('div',{staticStyle:{\"margin-bottom\":\"-20px\"}},[_c('span',{staticStyle:{\"font-weight\":\"600\",\"font-size\":\"16px\"}},[_vm._v(\"2FA Code\")])]),_c('el-form-item',{staticClass:\"form-items\",staticStyle:{\"margin-top\":\"40px\"},attrs:{\"prop\":\"code\"}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('message.spCodemsg'),\"clearable\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.submitCode('ruleFormCode')}},model:{value:(_vm.CodeFormData.code),callback:function ($$v) {_vm.$set(_vm.CodeFormData, \"code\", $$v)},expression:\"CodeFormData.code\"}})],1),_c('div',{staticStyle:{\"margin-top\":\"20px\",\"margin-bottom\":\"10px\"}},[_c('span',{staticStyle:{\"color\":\"grey\",\"line-height\":\"18px\"}},[_vm._v(_vm._s(_vm.$t('message.codeDes')))])]),_c('el-form-item',{staticClass:\"form-items\"},[_c('div',{staticClass:\"box-form-out\"},[_c('div',{staticClass:\"box-form-out-in-box\"},[_c('div',{staticClass:\"box-form-out-inner\"},[_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.needBind),expression:\"needBind\"}],staticClass:\"spbtn backbtn\",on:{\"click\":_vm.backQrCode}},[_vm._v(\"Back\")]),_c('el-button',{staticClass:\"spbtn registeringbtn\",on:{\"click\":function($event){return _vm.submitCode('ruleFormCode')}}},[_c('span',[_vm._v(_vm._s(_vm.$t('message.ok')))])]),_c('div',{staticClass:\"forget-pwd\"})],1)])])])],1)],1)]:[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"flex-direction\":\"column\",\"align-items\":\"center\"}},[_c('div',[_c('img',{attrs:{\"src\":_vm.QRCodeUrl,\"alt\":\"\",\"width\":\"240\"}})]),_c('div',[_c('p',{staticClass:\"tips\"},[_vm._v(\" Please use \"),_c('a',{attrs:{\"href\":\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en&pli=1\",\"target\":\"_blank\"}},[_vm._v(\"Google Authenticator App\")]),_vm._v(\" or \"),_c('a',{attrs:{\"href\":\"https://play.google.com/store/apps/details?id=com.azure.authenticator&hl=en_US\",\"target\":\"_blank\"}},[_vm._v(\"Microsoft Authenticator App\")]),_vm._v(\" Scan QR code \")]),_c('div',{staticClass:\"stepbtn\"},[_c('el-button',{staticClass:\"registeringbtn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.nextPage}},[_vm._v(\"Next\")])],1)])])]],2)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-box-top-area\"},[_c('div',{staticClass:\"login-title\"},[_c('span',[_vm._v(\"Scholarship Management Gateway System\")])]),_c('div',{staticClass:\"login-top-text\"},[_c('span',[_vm._v(\"Log In\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <!-- ===== -->\n    <div class=\"login-box\">\n        <div class=\"login-box-top-area\">\n            <div class=\"login-title\">\n                <span>Scholarship Management Gateway System</span>\n            </div>\n            <div class=\"login-top-text\">\n                <span>Log In</span>\n            </div>\n        </div>\n        <transition name=\"plus-icon\">\n            <template v-if=\"pageOneShow\">\n                <!-- <template v-if=\"false\"> -->\n                <div class=\"login-form\">\n                    <transition name=\"fade\" mode=\"out-in\">\n                        <div class=\"login-other\" v-if=\"styleData.login_type === 'sso'\">\n                            <button class=\"workwechat-login\" v-for=\"item in allObj.loginWays\" :key=\"item.SyName\">\n                                <a class=\"workwechat\" :title=\"item.WayName\" :href=\"item.WayToUrl\">\n                                    <p class=\"login-font\">\n                                        <img class=\"workwechat-img\" :src=\"item.WayImgUrl\" alt=\"\" />\n                                        {{ item.WayName | capitalize }}\n                                    </p>\n                                </a>\n                            </button>\n                        </div>\n                        <div v-else>\n                            <el-form ref=\"ruleForm\" :rules=\"rules\" class=\"demo-ruleForm\" :model=\"ruleFormData\">\n                                <el-form-item\n                                    class=\"form-items\"\n                                    :prop=\"\n                                        EMAIL_REGEX.test(ruleFormData.username)\n                                            ? 'userEmail'\n                                            : MOBILENUM_REGEX.test(ruleFormData.username)\n                                            ? 'username'\n                                            : 'otheruser'\n                                    \"\n                                >\n                                    <el-input clearable v-model=\"ruleFormData.username\" placeholder=\"Please enter your email\"></el-input>\n                                    <!-- @input=\"getEmail\" -->\n                                </el-form-item>\n                                <!-- -------------- -->\n                                <el-form-item class=\"form-items\" prop=\"password\">\n                                    <el-input\n                                        v-model=\"ruleFormData.password\"\n                                        placeholder=\"Enter password\"\n                                        show-password\n                                        clearable\n                                        @keyup.enter.native=\"submitFormToken('ruleForm')\"\n                                    >\n                                    </el-input>\n                                </el-form-item>\n                                <el-form-item v-if=\"isAdmin\">\n                                    <div id=\"text_login\">\n                                        <div class=\"forget-password\" @click=\"toForgetPage\">\n                                            <span>Forgot Password?</span>\n                                        </div>\n                                        <!-- <div class=\"forget-password\" @click=\"toRegisterPage\">\n                                            <span>Register</span>\n                                        </div> -->\n                                    </div>\n                                </el-form-item>\n                                <!-- --------- -->\n                                <el-form-item class=\"form-items\">\n                                    <div class=\"box-form-out\">\n                                        <div class=\"box-form-out-in-box\">\n                                            <div class=\"box-form-out-inner\">\n                                                <el-button class=\"btn\" @click=\"submitFormToken('ruleForm')\"><span>LOGIN</span></el-button>\n                                                <div class=\"forget-pwd\">\n                                                    <!-- <a @click=\"toRepassword\">忘记密码</a> -->\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </el-form-item>\n                            </el-form>\n                            <!-- 验证 -->\n                            <el-dialog\n                                title=\"Swipe And Verify\"\n                                :visible.sync=\"dialogVisible\"\n                                :width=\"dialogWidth\"\n                                :close-on-click-modal=\"false\"\n                            >\n                                <DragVerify\n                                    :message=\"{ isPass, dialogVisible, isFailed }\"\n                                    @sendMessage=\"sendMessage\"\n                                    :key=\"mainKey\"\n                                    @sendFiledMessage=\"sendFiledMessage\"\n                                />\n                            </el-dialog>\n                        </div>\n                    </transition>\n                    <div class=\"bottom-text-signup\" v-if=\"isAdmin\">\n                        <div>\n                            <p>Don’t have an account? <span @click=\"toSignUp\">Sign Up</span></p>\n                        </div>\n                    </div>\n                </div>\n            </template>\n            <template v-else-if=\"pageTwoShow\">\n                <!-- <template v-else-if=\"false\"> -->\n                <div>\n                    <el-form ref=\"ruleFormCode\" :rules=\"rulesCode\" :model=\"CodeFormData\">\n                        <div style=\"margin-bottom: -20px\">\n                            <span style=\"font-weight: 600; font-size: 16px\">2FA Code</span>\n                        </div>\n                        <el-form-item class=\"form-items\" prop=\"code\" style=\"margin-top: 40px\">\n                            <el-input\n                                v-model=\"CodeFormData.code\"\n                                :placeholder=\"$t('message.spCodemsg')\"\n                                clearable\n                                @keyup.enter.native=\"submitCode('ruleFormCode')\"\n                            >\n                            </el-input>\n                        </el-form-item>\n                        <div style=\"margin-top: 20px; margin-bottom: 10px\">\n                            <span style=\"color: grey; line-height: 18px\">{{ $t('message.codeDes') }}</span>\n                        </div>\n                        <el-form-item class=\"form-items\">\n                            <div class=\"box-form-out\">\n                                <div class=\"box-form-out-in-box\">\n                                    <div class=\"box-form-out-inner\">\n                                        <el-button v-show=\"needBind\" class=\"spbtn backbtn\" @click=\"backQrCode\">Back</el-button>\n                                        <el-button class=\"spbtn registeringbtn\" @click=\"submitCode('ruleFormCode')\"\n                                            ><span>{{ $t('message.ok') }}</span></el-button\n                                        >\n                                        <div class=\"forget-pwd\">\n                                            <!-- <a @click=\"toRepassword\">忘记密码</a> -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </template>\n            <template v-else>\n                <div style=\"display: flex; justify-content: center; flex-direction: column; align-items: center\">\n                    <div>\n                        <img :src=\"QRCodeUrl\" alt=\"\" width=\"240\" />\n                    </div>\n                    <div>\n                        <p class=\"tips\">\n                            Please use\n                            <a\n                                href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en&pli=1\"\n                                target=\"_blank\"\n                                >Google Authenticator App</a\n                            >\n                            or\n                            <a href=\"https://play.google.com/store/apps/details?id=com.azure.authenticator&hl=en_US\" target=\"_blank\"\n                                >Microsoft Authenticator App</a\n                            >\n                            Scan QR code\n                        </p>\n                        <!-- <p class=\"tips\" style=\"margin-top: 15px\">\n                            After scanning the code and binding, please jump to the verification page<a\n                                href=\"#\"\n                                target=\"_self\"\n                                class=\"spclick\"\n                                @click=\"toCodeOther\"\n                                >Click To Jump</a\n                            >\n                        </p> -->\n                        <div class=\"stepbtn\">\n                            <el-button type=\"primary\" class=\"registeringbtn\" @click=\"nextPage\">Next</el-button>\n                        </div>\n                    </div>\n                </div>\n            </template>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport JSEncrypt from 'jsencrypt';\nimport DragVerify from '@/components/DragVerify.vue';\nimport { isMobile } from '@/utils/fun.js';\nimport { getPubKeyApi, checkTwoFAApi, checkAuthenticationApi, loginBeforeApi, loginAfterApi, getTokenApi } from '@/api/https.js';\nimport '../assets/css/index.css';\nexport default {\n    filters: {\n        capitalize: function (value) {\n            return value + this.$t('message.login');\n        }\n    },\n    props: {\n        allObj: Object,\n        logo_path: String,\n        styleData: Object,\n        isAdmin: Boolean\n    },\n    components: { DragVerify },\n    data() {\n        return {\n            needBind: false,\n            dialogWidth: '',\n            // 滑块\n            dialogVisible: false,\n            isPass: false,\n            isFailed: false,\n            // 计时器\n            timer: null,\n            timer2: null,\n            timer3: null,\n            ruleFormData: {\n                username: '',\n                password: ''\n            },\n\n            EMAIL_REGEX:\n                /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n            MOBILENUM_REGEX: /^\\d{4,11}$/,\n            pubKey: '',\n            EMAILS: '',\n            userid: '',\n            loading: true,\n\n            //选择状态\n            pageOneShow: null,\n            pageTwoShow: null,\n\n            QRCodeUrl: '',\n            CodeFormData: {\n                code: ''\n            },\n            userIdsq: '',\n            exToken: '',\n            resultUri: ''\n        };\n    },\n    computed: {\n        rules() {\n            return {\n                username: [\n                    {\n                        pattern: /^\\d{4,11}$/,\n                        message: this.$t('message.msgIphone'),\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                userEmail: [\n                    {\n                        pattern:\n                            /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n                        message: this.$t('message.msgEmail'),\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                otheruser: [\n                    {\n                        required: true,\n                        message: this.$t('message.msgOther'),\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                password: [{ required: true, message: this.$t('message.msgpassword'), trigger: ['blur', 'change'] }]\n            };\n        },\n        rulesCode() {\n            return {\n                code: [\n                    {\n                        pattern: /^\\d{6}$/,\n                        message: this.$t('message.spCodemsg'),\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            };\n        }\n    },\n    methods: {\n        // 获取失败状态\n        sendFiledMessage(val) {\n            console.log(val, 'pp');\n            // if (val) {\n            //     this.dialogVisible = false;\n            //     this.$notify.error({\n            //         title: 'error',\n            //         message: ``,\n            //         duration: 0,\n            //         position: 'bottom-left',\n            //         showClose: true\n            //     });\n            // }\n        },\n\n        // 获取验证状态\n        async sendMessage(val) {\n            const { isPass } = val;\n            this.isPass = isPass;\n            setTimeout(async () => {\n                this.dialogVisible = false;\n\n                if (this.allObj.userData.useQingFlowVersion <= 4.5) {\n                    this.loginBefore();\n                } else {\n                    this.loginAfter();\n                }\n            }, 200);\n        },\n\n        // 取消表单\n        cancelSubmitForm() {\n            this.dialogVisibleTips = false;\n            this.isPass = false;\n            this.mainKey = this.mainKey + 1;\n        },\n        handleClose() {\n            this.dialogVisibleTips = false;\n            this.isPass = false;\n            this.mainKey = this.mainKey + 1;\n        },\n\n        nextPage() {\n            this.pageOneShow = false;\n            this.pageTwoShow = true;\n        },\n        backQrCode() {\n            this.pageOneShow = false;\n            this.pageTwoShow = false;\n        },\n\n        // 重置密码\n        toForgetPage() {\n            this.$router.push('/repassword');\n        },\n        // 注册\n        toSignUp() {\n            this.$router.push('/register');\n        },\n        // 重置表单\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        },\n\n        // 获取pubKey\n        async getPubKey() {\n            await getPubKeyApi().then((res) => {\n                const { code } = res.data;\n                console.log(res, 'herer');\n                if (code === 0) {\n                    this.pubKey = res.data.data.pubkey;\n                } else {\n                    this.$notify.error({\n                        title: 'error',\n                        message: `errorCode:${code}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            });\n        },\n        //验证token的第一次登录\n        submitFormToken(formName) {\n            // 需要滑块验证\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    // 是否通过了验证\n                    if (!this.isPass) {\n                        this.dialogVisible = true;\n                    } else {\n                        this.dialogVisible = false;\n                    }\n                }\n            });\n        },\n        // 跳转链接\n        toCodeOther() {\n            this.pageOneShow = false;\n            this.pageTwoShow = true;\n        },\n        // 验证code\n        submitCode(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    const { code } = this.CodeFormData;\n                    const params = { userId: this.userIdsq, checkCode: code };\n                    // console.log(params);\n                    this.checkAuthentication(params);\n                }\n            });\n        },\n\n        // 请求判断是否进行了2FA认证\n        async checkTwoFA() {\n            await checkTwoFAApi(JSON.stringify({ userId: this.userIdsq })).then(\n            // await checkTwoFAApi(JSON.stringify({ userId: 'test' })).then(\n                (res) => {\n                    if (res.data.code === 0) {\n                        console.log(res.data.result);\n                        const { need2FA, needBind, qrCode, uri } = res.data.result;\n                        this.needBind = needBind;\n                        this.resultUri = uri;\n                        if (need2FA) {\n                            if (needBind) {\n                                // 需要绑定 和 验证\n                                this.pageOneShow = false;\n                                this.pageTwoShow = false;\n                                this.QRCodeUrl = qrCode;\n                            } else {\n                                // 不需要绑定 需要验证\n                                this.pageOneShow = false;\n                                this.pageTwoShow = true;\n                            }\n                        } else {\n                            // 其他\n                            document.cookie =\n                                this.styleData.qflowType + 'QflowToken=' + this.exToken + ';path=/;domain=.' + this.styleData.qflowDomain;\n                            // 在这里进行页面的成功跳转\n                            setTimeout(() => {\n                                window.location.href = uri;\n                            }, 2000);\n                        }\n                    } else {\n                        this.$notify.error({\n                            title: 'error',\n                            message: `Message：${res.data.message}`,\n                            duration: 0,\n                            position: 'bottom-left',\n                            showClose: true\n                        });\n                        this.resetForm('ruleForm');\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'erros',\n                        message: `error status:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // 判定方式\n        async checkAuthentication(params) {\n            await checkAuthenticationApi(JSON.stringify(params)).then(\n                async (res) => {\n                    if (res.data.code === 0) {\n                        // checkcode 判定成功\n                        document.cookie =\n                            this.styleData.qflowType + 'QflowToken=' + this.exToken + ';path=/;domain=.' + this.styleData.qflowDomain;\n                        this.$notify.success({\n                            title: 'success',\n                            message: `2FA verification succeeded`,\n                            duration: 0,\n                            position: 'bottom-left',\n                            showClose: true\n                        });\n                        // 跳转登录\n                        setTimeout(() => {\n                            window.location.href = this.resultUri;\n                        }, 2200);\n                    } else {\n                        this.$notify.error({\n                            title: 'error',\n                            message: `Message:${res.data.message}`,\n                            duration: 0,\n                            position: 'bottom-left',\n                            showClose: true\n                        });\n                        this.resetForm('ruleForm');\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'error',\n                        message: `error status:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // async loginSuccess() {\n        //     await loginSuccessApi({ userId: this.userIdsq }).then(\n        //         (res) => {\n        //             if (res.data.code === 0) {\n        //                 const { system, deviceType, lastLoginTime } = res.data.result;\n        //                 // 是否为首次登录\n        //                 if (lastLoginTime == null) {\n        //                     setTimeout(() => {\n        //                         this.$notify.success({\n        //                             title: 'Login Successfully',\n        //                             dangerouslyUseHTMLString: true,\n        //                             message: ` <div style=\"padding: 10px 6px;\">\n        //                                         <div><strong>Hello, Welcome To Log In :-)</strong></div>\n        //                                         <br/>\n        //                                        </div>`,\n        //                             duration: 0,\n        //                             position: 'bottom-left',\n        //                             showClose: true\n        //                         });\n        //                     }, 1000);\n        //                 } else {\n        //                     setTimeout(() => {\n        //                         this.$notify.success({\n        //                             title: 'Login Successfully',\n        //                             dangerouslyUseHTMLString: true,\n        //                             message: ` <div style=\"padding: 10px 6px;\">\n        //                                         <div>Last Your System：<span>${system}</span></div>\n        //                                         <div>Last Equipment type：<span>${deviceType}</span></div>\n        //                                         <div>Last Login Time：<span>2023-08-22 15:30:30</span></div>\n        //                                        </div>`,\n        //                             // ${lastLoginTime}\n\n        //                             duration: 0,\n        //                             position: 'bottom-left',\n        //                             showClose: true,\n        //                             customClass: 'spclass'\n        //                         });\n        //                     }, 1000);\n        //                 }\n        //             } else {\n        //                 this.$notify.error({\n        //                     title: 'error',\n        //                     message: `Message:${res.data.message}`,\n        //                     duration: 0,\n        //                     position: 'bottom-left',\n        //                     showClose: true\n        //                 });\n        //                 this.resetForm('ruleForm');\n        //             }\n        //         },\n        //         (err) => {\n        //             this.$notify.error({\n        //                 title: 'error',\n        //                 message: `error status:${err.response.status}`,\n        //                 duration: 0,\n        //                 position: 'bottom-left',\n        //                 showClose: true\n        //             });\n        //         }\n        //     );\n        // },\n\n        // 登录逻辑的兼容\n        // 4.5之前的版本 **直接换取token**\n        async loginBefore() {\n            let encryptor = new JSEncrypt();\n            encryptor.setPublicKey(this.pubKey);\n            let rsapwd = encryptor.encrypt(this.ruleFormData.password);\n            let info = null;\n            if (this.EMAIL_REGEX.test(this.ruleFormData.username)) {\n                info = {\n                    email: this.ruleFormData.username,\n                    areaCode: '86',\n                    mobile: '',\n                    password: rsapwd\n                };\n            } else if (this.MOBILENUM_REGEX.test(this.ruleFormData.username)) {\n                info = {\n                    email: '',\n                    areaCode: '86',\n                    mobile: this.ruleFormData.username,\n                    password: rsapwd\n                };\n            }\n            await loginBeforeApi(JSON.stringify(info)).then(\n                (res) => {\n                    if (res.data.token != undefined) {\n                        // ===================edit-april-start===================\n                        // 登录;\n                        // var token = res.data.token;\n                        // document.cookie =\n                        //     this.styleData.qflowType + 'QflowToken=' + token + ';path=/;domain=.' + this.styleData.qflowDomain;\n                        // window.location.href = this.styleData.homeUrl;\n                        //  请求判断是否进行了2FA认证\n                        const {\n                            token,\n                            userInfo: {\n                                lastWsInfo: { exUserId }\n                            }\n                        } = res.data;\n                        this.userIdsq = exUserId;\n                        this.exToken = token;\n                        this.checkTwoFA(exUserId);\n                        // ===================edit-april-end===================\n                    } else {\n                        if (res.data.statusCode == '41110') {\n                            this.$notify.error({\n                                title: 'error',\n                                message: 'You have entered an invalid username or password. Please try again.',\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                            // 刷新验证码\n                            this.dialogVisibleTips = false;\n                            this.isPass = false;\n                            this.mainKey = this.mainKey + 1;\n                        } else {\n                            this.$notify.error({\n                                title: 'error',\n                                message: `errorCode:${res.data.statusCode}`,\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                        }\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'error',\n                        message: `errorCode:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // 4.5之后的版本 **间接换取token**\n        async loginAfter() {\n            let encryptor = new JSEncrypt();\n            encryptor.setPublicKey(this.pubKey);\n            console.log(this.pubKey);\n            let rsapwd = encryptor.encrypt(this.ruleFormData.password);\n\n            let info = null;\n            if (this.EMAIL_REGEX.test(this.ruleFormData.username)) {\n                info = {\n                    email: this.ruleFormData.username,\n                    areaCode: '86',\n                    mobile: '',\n                    password: rsapwd,\n                    loginType: 'email'\n                };\n            } else if (this.MOBILENUM_REGEX.test(this.ruleFormData.username)) {\n                info = {\n                    email: '',\n                    areaCode: '86',\n                    mobile: this.ruleFormData.username,\n                    password: rsapwd,\n                    loginType: 'phone'\n                };\n            }\n            await loginAfterApi(JSON.stringify(info)).then(\n                (res) => {\n                    if (res.status === 200 && res.data.code === 0) {\n                        // console.log(res.data.data);\n                        // 进行组织数据 获取token操作\n                        let secondObj = res.data.data[0];\n                        console.log(secondObj);\n                        // this.getToken(secondObj);\n                    } else {\n                        if (res.data.statusCode == '41110') {\n                            // this.$message.error(\"账号或密码输入错误\");\n                            this.$notify.error({\n                                title: 'error',\n                                message: 'You have entered an invalid username or password. Please try again.',\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                            this.dialogVisibleTips = false;\n                            this.isPass = false;\n                            this.mainKey = this.mainKey + 1;\n                        } else {\n                            this.$notify.error({\n                                title: 'error',\n                                message: `errorCode:${res.data.statusCode}`,\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                        }\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'error',\n                        message: `errorCode:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        async getToken(obj) {\n            await getTokenApi(JSON.stringify(obj)).then(\n                (res) => {\n                    if (res.status === 200 && res.data.code === 0) {\n                        if (res.data.data.token != undefined) {\n                            var token = res.data.token;\n                            document.cookie =\n                                this.styleData.qflowType + 'QflowToken=' + token + ';path=/;domain=.' + this.styleData.qflowDomain;\n                            window.location.href = this.styleData.homeUrl;\n                            console.log('token');\n                        }\n                    } else {\n                        if (res.data.statusCode == '41110') {\n                            this.$notify.error({\n                                title: 'error',\n                                message: 'You have entered an invalid username or password. Please try again.',\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                            this.dialogVisibleTips = false;\n                            this.isPass = false;\n                            this.mainKey = this.mainKey + 1;\n                        } else {\n                            this.$notify.error({\n                                title: 'error',\n                                message: `errorCode:${res.data.statusCode}`,\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.resetForm('ruleForm');\n                        }\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'error',\n                        message: `errorCode:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        }\n    },\n    created() {\n        if (isMobile()) {\n            // alert('移动端')\n            this.dialogWidth = '100%';\n        } else {\n            // alert(\"pc端\")\n            this.dialogWidth = '30%';\n        }\n    },\n    mounted() {\n        // 测试存储\n        // 获取指定的userid判断自动登录还是手动登录\n        this.getPubKey();\n        this.pageOneShow = true;\n        this.pageTwoShow = false;\n        // checkTwoFAApi(JSON.stringify({ userId: 'jindaming' }));\n        // this.checkTwoFA();\n    }\n};\n</script>\n<style lang=\"scss\" scoped>\n[v-cloak] {\n    display: none;\n}\n@import '../assets/scss/PcLoginForm.scss';\n@import '../assets/scss/MobileLoginForm.scss';\n\n.stepbtn {\n    width: 100%;\n    height: max-content;\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px;\n}\n.registeringbtn {\n    background: #fb9337;\n    border-color: #fb9337;\n    color: white;\n    transition: all 0.3s;\n    &:hover {\n        background: #ffb061;\n        border-color: #ffb061;\n        color: white;\n    }\n}\n.tips {\n    line-height: 24px;\n    a {\n        color: #fb9337;\n    }\n}\na::after {\n    content: '' !important;\n    width: 0px !important;\n}\n.backbtn {\n    transition: all 0.3s;\n    &:hover {\n        background: #fff2e5;\n        border-color: #ffb061;\n        color: #fb9337;\n    }\n}\n\n.box-form-out-inner {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 15px;\n}\n\n::v-deep .el-input__inner {\n    transition: all 0.3s;\n}\n::v-deep .el-input__inner:hover {\n    border-color: #ffb061;\n    border-right-width: 1px !important;\n    z-index: 1;\n}\n::v-deep .el-input__inner:focus {\n    border-color: #ffb061 !important;\n    box-shadow: 0 0 0 2px #fb933733 !important;\n    border-right-width: 1px !important;\n    outline: 0 !important;\n}\n::v-deep .el-select .el-input__inner:focus {\n    border-color: #ffb061;\n    box-shadow: 0 0 0 2px #fb933733;\n    border-right-width: 1px;\n    outline: 0;\n}\n\n::v-deep .el-select-dropdown__item.hover,\n.el-select-dropdown__item:hover {\n    background-color: #f5f7fa;\n    color: #ffb061;\n}\n\n::v-deep .el-select-dropdown__item.selected {\n    color: #ffb061 !important;\n    font-weight: 700;\n}\n#imgoutbox {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.login-title {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 36px;\n    color: #acb3bd;\n    font-family: 'PingFang SC';\n}\n.login-top-text {\n    margin-top: 4px;\n    font-family: 'PingFang SC';\n    color: #121315;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 36px;\n}\n.forget-password {\n    height: max-content;\n    line-height: 22px;\n    margin-top: -4px;\n    cursor: pointer;\n    span {\n        color: #fb9337;\n    }\n}\n::v-deep .el-button--text {\n    padding-bottom: 16px !important;\n}\n.bottom-text-signup {\n    text-align: center;\n    font-family: 'PingFang SC';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 22px;\n    color: #767e89;\n    span {\n        cursor: pointer;\n        color: #fb9337;\n    }\n}\n::v-deep .el-form-item:nth-child(3) {\n    margin-bottom: 16px;\n}\n#text_login {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n::v-deep .el-dialog {\n    width: max-content !important;\n    min-width: 320px !important;\n    border-radius: 24px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoginForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoginForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LoginForm.vue?vue&type=template&id=64d07ad8&scoped=true&\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js&\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LoginForm.vue?vue&type=style&index=0&id=64d07ad8&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"64d07ad8\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","attrs","pageOneShow","styleData","login_type","_l","allObj","loginWays","item","key","SyName","WayName","WayToUrl","WayImgUrl","_v","_s","_f","ref","rules","ruleFormData","EMAIL_REGEX","test","username","MOBILENUM_REGEX","model","value","callback","$$v","$set","expression","nativeOn","$event","type","indexOf","_k","keyCode","submitFormToken","password","isAdmin","on","toForgetPage","_e","dialogVisible","dialogWidth","mainKey","isPass","isFailed","sendMessage","sendFiledMessage","toSignUp","pageTwoShow","rulesCode","CodeFormData","staticStyle","$t","submitCode","code","directives","name","rawName","needBind","backQrCode","QRCodeUrl","nextPage","staticRenderFns","filters","capitalize","props","logo_path","components","DragVerify","data","timer","timer2","timer3","pubKey","EMAILS","userid","loading","userIdsq","exToken","resultUri","computed","pattern","message","trigger","userEmail","otheruser","required","methods","console","setTimeout","cancelSubmitForm","handleClose","resetForm","title","duration","position","showClose","toCodeOther","userId","checkCode","res","need2FA","qrCode","uri","document","window","err","encryptor","info","email","areaCode","mobile","token","userInfo","lastWsInfo","exUserId","loginType","created","mounted","component"],"sourceRoot":""}