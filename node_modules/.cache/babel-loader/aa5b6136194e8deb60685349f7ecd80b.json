{"ast":null,"code":"import _regeneratorRuntime from \"/Users/april/Desktop/git-lab/\\u65B0\\u52A0\\u5761/qflow-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/april/Desktop/git-lab/\\u65B0\\u52A0\\u5761/qflow-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport JSEncrypt from 'jsencrypt';\nimport zxcvbn from 'zxcvbn';\nimport DragVerify from '@/components/DragVerify.vue';\nimport { EMAIL_REGEX, PHONE_REG, PASSWORD_REG, REGEXLENGHT, MAXLENGHT } from '@/common/reg/index.js';\nimport { getAllDataApi, getPubKeyApi, checkTwoFARegisterApi } from '@/api/https.js';\nimport { isMobile, sortArrayByFirstLetter } from '@/utils/fun.js';\nimport { timesToFormateall } from '@/utils/times.js';\nimport Country from '../../components/Country/index';\nimport { cn_Reg, sg_Reg, hk_Reg, mo_Reg, tw_Reg, my_Reg } from '../../common/reg/phoneCountry';\nexport default {\n  components: {\n    DragVerify: DragVerify,\n    Country: Country\n  },\n  data: function data() {\n    var _this = this;\n\n    // 邮箱校验\n    var validateEmail = function validateEmail(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter your Email Address'));\n      } else {\n        // if (this.ruleForm.EmailAddress !== '') {\n        //     this.$refs.ruleForm.validateField('checkPass');\n        // }\n        callback();\n      }\n    };\n\n    var validateEmail2 = function validateEmail2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter email again.'));\n      } else if (value !== _this.ruleForm.EmailAddress) {\n        callback(new Error('The new email address and confirmation email address do not match.'));\n      } else {\n        callback();\n      }\n    }; // 密码校验\n\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter your Password'));\n      } else if (value.indexOf(_this.ruleForm.MobileNumber) != -1 && _this.ruleForm.MobileNumber != '') {\n        callback(new Error('The password cannot contain a Mobile Number, Please reset your password'));\n      } else if (value.indexOf(_this.ruleForm.IDNo) != -1 && _this.ruleForm.IDNo != '') {\n        callback(new Error('The password cannot contain a ID No, Please reset your password'));\n      } else if (value.indexOf(_this.ruleForm.EmailAddress) != -1 && _this.ruleForm.EmailAddress != '') {\n        callback(new Error('The password cannot contain a Email Address, Please reset your password'));\n      } else if (_this.passwordStrength.score < 3) {\n        callback(new Error('Your password strength is low, Please reset your password'));\n      } else {\n        // if (this.ruleForm.CreatePassword !== '') {\n        // this.$refs.ruleForm.validateField('checkPass');\n        // }\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter Password again'));\n      } else if (value !== _this.ruleForm.CreatePassword) {\n        callback(new Error('The new password and confirmation password do not match.'));\n      } else {\n        callback();\n      }\n    }; // 手机号正则判断\n\n\n    var validateMobilePhone = function validateMobilePhone(rule, value, callback) {\n      // console.log(this.codeType, 'pp');\n      switch (_this.codeType) {\n        // case 'cn':\n        //     cn_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n        case 'sg':\n          sg_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n        // case 'hk':\n        //     hk_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n        // case 'mo':\n        //     mo_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n        // case 'tw':\n        //     tw_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n        // case 'my':\n        //     my_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n\n        default:\n          callback();\n      }\n    };\n\n    return {\n      // code 的种类\n      codeType: '',\n      passwordStrength: null,\n      regexLength: false,\n      regexLower: false,\n      passwordCheckResult: null,\n      pickerOptions: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() > Date.now() - 8.64e6;\n        },\n        onPick: function onPick(picker) {\n          // 阻止用户查看将来时间\n          if (picker.$options.name === 'ElDatePicker') {\n            var minDate = picker.minDate,\n                maxDate = picker.maxDate;\n            var currentDate = new Date();\n\n            if (maxDate && maxDate.getTime() > currentDate.getTime()) {\n              picker.$emit('pick', [minDate, currentDate]);\n            }\n          }\n        }\n      },\n      pubKey: '',\n      sendTargetObj: {},\n      isShow: true,\n      QRCodeUrl: '',\n      mainKey: 0,\n      // 验证信息\n      registerMessage: 'The account has been registered, please check the information or choose to log in',\n      // 是否通过验证\n      isPass: false,\n      // 对话框的宽度\n      dialogWidth: '',\n      dialogWidthTips: '',\n      textMes: '',\n      IDTypeSelect: [],\n      PlaceofBirthSelect: [],\n      MaritalStatusSelect: [],\n      CitizenshipSelect: [],\n      RaceSelect: ['CHINESE', 'MALAY', 'INDIAN', 'EURASIAN', 'Others'],\n      dialogVisible: false,\n      dialogVisibleTips: false,\n      // 表单规则\n      ruleForm: {\n        IDType: '',\n        IDNo: '',\n        FullName: '',\n        Sex: '',\n        PlaceofBirth: '',\n        Race: '',\n        spRace: '',\n        MaritalStatus: '',\n        DateofBirth: '',\n        Citizenship: '',\n        spCitizenship: '',\n        TypeofDwelling: '',\n        spTypeofDwelling: '',\n        MobileNumber: '',\n        EmailAddress: '',\n        ConfirmEmailAddress: '',\n        CreatePassword: '',\n        ConfirmPassword: '',\n        TermsandConditions: []\n      },\n      options: [{\n        label: 'Male',\n        value: 'Male'\n      }, {\n        label: 'Female',\n        value: 'Female'\n      }],\n      // 表单验证规则\n      rules: {\n        IDType: [{\n          required: true,\n          message: 'Please choose ID Type',\n          trigger: ['blur', 'change']\n        }],\n        IDNo: [{\n          required: true,\n          message: 'Please enter your ID No'\n        }],\n        FullName: [{\n          required: true,\n          message: 'Please enter your FullName'\n        }],\n        Sex: [{\n          required: true,\n          message: 'Please choose your Sex'\n        }],\n        PlaceofBirth: [{\n          required: true,\n          message: 'Please choose your Place of Birth'\n        }],\n        // Race: [{ required: true, message: 'Please choose your Race' }],\n        // MaritalStatus: [{ required: true, message: 'Please choose your Marital Status' }],\n        DateofBirth: [{\n          required: true,\n          message: 'Please choose your Date of Birth',\n          trigger: ['blur', 'change']\n        }],\n        Citizenship: [{\n          required: true,\n          message: 'Please enter your Citizenship',\n          trigger: ['blur', 'change']\n        }],\n        spCitizenship: [{\n          required: true,\n          message: 'Please enter your Citizenship',\n          trigger: ['blur', 'change']\n        }],\n        TypeofDwelling: [{\n          required: true,\n          message: 'Please enter your TypeofDwelling',\n          trigger: ['blur', 'change']\n        }],\n        spTypeofDwelling: [{\n          required: true,\n          message: 'Please enter your TypeofDwelling',\n          trigger: ['blur', 'change']\n        }],\n        MobileNumber: [{\n          required: true,\n          validator: validateMobilePhone,\n          trigger: ['blur', 'change']\n        } // { pattern: this.getCountrys(), message: 'Please enter your right Mobile Number', trigger: ['blur', 'change'] }\n        ],\n        EmailAddress: [{\n          required: true,\n          validator: validateEmail,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: EMAIL_REGEX,\n          message: 'Please enter your right Email Address',\n          trigger: ['blur', 'change']\n        }],\n        ConfirmEmailAddress: [{\n          required: true,\n          validator: validateEmail2,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: EMAIL_REGEX,\n          message: 'Please enter your right Email Address',\n          trigger: ['blur', 'change']\n        }],\n        CreatePassword: [{\n          required: true,\n          validator: validatePassword,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: PASSWORD_REG,\n          message: 'Please enter a password that meets the rules',\n          trigger: ['blur', 'change']\n        }],\n        ConfirmPassword: [{\n          required: true,\n          validator: validatePassword2,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: PASSWORD_REG,\n          message: 'Please enter a password that meets the rules',\n          trigger: ['blur', 'change']\n        }],\n        TermsandConditions: [{\n          type: 'array',\n          required: true,\n          message: 'Please agree to the relevant privacy agreement',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  computed: {\n    resDate: function resDate() {\n      return Dayjs(this.ruleForm.DateofBirth).format('YYYY-MM-DD HH:mm:ss');\n    },\n    RaceComputed: function RaceComputed() {\n      if (this.ruleForm.Race === 'Others') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    CitizenshipComputed: function CitizenshipComputed() {\n      if (this.ruleForm.Citizenship === 'Others') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  methods: {\n    // 获取国家\n    getCountrys: function getCountrys(val) {\n      this.codeType = val.code;\n    },\n    getProgressColor: function getProgressColor(percentage) {\n      if (percentage <= 25) {\n        return '#db3f29'; // 其他情况显示绿色\n      } else if (percentage <= 50) {\n        return '#ed8e3e'; // 当百分比小于等于75时，显示黄色\n      } else if (percentage <= 75) {\n        return '#f5d247'; // 当百分比小于等于50时，显示橙色\n      } else {\n        return '#4aab49'; // 当百分比小于等于25时，显示红色\n      }\n    },\n    evaluatePasswordStrength: function evaluatePasswordStrength(password) {\n      var result = zxcvbn(password);\n      return result;\n    },\n    checkPassword: function checkPassword() {\n      // 最小长度为 12 个字符\n      REGEXLENGHT.test(this.ruleForm.CreatePassword) ? this.regexLength = true : this.regexLength = false; // //  是否包含小写字母\n\n      PASSWORD_REG.test(this.ruleForm.CreatePassword) ? this.regexLower = true : this.regexLower = false;\n      var result = this.evaluatePasswordStrength(this.ruleForm.CreatePassword);\n      this.passwordStrength = result;\n    },\n    hiddenDiv: function hiddenDiv() {\n      var target = document.getElementById('card');\n      target.style.opacity = '0';\n      target.style.zIndex = '-9999';\n      target.style.transition = 'all 0.6s';\n    },\n    showDiv: function showDiv() {\n      var target = document.getElementById('card');\n      target.style.opacity = '1';\n      target.style.zIndex = '9999999';\n      target.style.background = 'white';\n      target.style.transition = 'all 0.6s';\n    },\n    // 取消表单\n    cancelSubmitForm: function cancelSubmitForm() {\n      this.dialogVisibleTips = false;\n      this.dialogVisible = false;\n      this.isPass = false;\n      this.mainKey = this.mainKey + 10;\n    },\n    handleClose: function handleClose() {\n      this.dialogVisibleTips = false;\n      this.dialogVisible = false;\n      this.isPass = false;\n      this.mainKey = this.mainKey + 1;\n    },\n    // 跳转到登录页面\n    toLoginIn: function toLoginIn() {\n      var _this2 = this;\n\n      this.dialogVisibleTips = false;\n      this.dialogVisible = false;\n      setTimeout(function () {\n        _this2.$router.push('/login');\n      }, 200);\n    },\n    clearingTochange: function clearingTochange() {\n      this.ruleForm.Race = '';\n    },\n    clearingTochangeCiti: function clearingTochangeCiti() {\n      this.ruleForm.Citizenship = '';\n    },\n    // 获取验证状态\n    sendMessage: function sendMessage(val) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var isPass;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                isPass = val.isPass;\n                _this3.isPass = isPass;\n                console.log(isPass, 'res');\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  var _this3$ruleForm, IDType, IDNo, FullName, Sex, PlaceofBirth, Race, MaritalStatus, DateofBirth, Citizenship, spCitizenship, TypeofDwelling, spRace, MobileNumber, ConfirmEmailAddress, ConfirmPassword, TermsandConditions, encryptor, scPwd, resDate, sendTargetObj;\n\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _this3.dialogVisible = false; // 在这里整理数据\n\n                          _this3$ruleForm = _this3.ruleForm, IDType = _this3$ruleForm.IDType, IDNo = _this3$ruleForm.IDNo, FullName = _this3$ruleForm.FullName, Sex = _this3$ruleForm.Sex, PlaceofBirth = _this3$ruleForm.PlaceofBirth, Race = _this3$ruleForm.Race, MaritalStatus = _this3$ruleForm.MaritalStatus, DateofBirth = _this3$ruleForm.DateofBirth, Citizenship = _this3$ruleForm.Citizenship, spCitizenship = _this3$ruleForm.spCitizenship, TypeofDwelling = _this3$ruleForm.TypeofDwelling, spRace = _this3$ruleForm.spRace, MobileNumber = _this3$ruleForm.MobileNumber, ConfirmEmailAddress = _this3$ruleForm.ConfirmEmailAddress, ConfirmPassword = _this3$ruleForm.ConfirmPassword, TermsandConditions = _this3$ruleForm.TermsandConditions; // 密码加密\n\n                          encryptor = new JSEncrypt();\n                          console.log(_this3.pubKey, ConfirmPassword);\n                          encryptor.setPublicKey(_this3.pubKey);\n                          scPwd = encryptor.encrypt(ConfirmPassword); // 日期处理\n\n                          resDate = timesToFormateall(DateofBirth);\n                          sendTargetObj = {\n                            idType: IDType,\n                            nric: IDNo,\n                            fullName: FullName,\n                            sex: Sex,\n                            placeOfBirth: PlaceofBirth,\n                            race: Race == 'Others' ? spRace : Race,\n                            maritalStatus: MaritalStatus,\n                            dateOfBirth: resDate,\n                            citizenship: Citizenship == 'Others' ? spCitizenship : Citizenship,\n                            typeOfDwelling: TypeofDwelling,\n                            mobileNumber: MobileNumber,\n                            emailAddress: ConfirmEmailAddress,\n                            password: scPwd,\n                            agreeAgreement: TermsandConditions.length != 0 ? true : false\n                          }; // this.sendTargetObj = sendTargetObj;\n\n                          console.log(sendTargetObj, 'send'); // 验证\n\n                          _context.next = 11;\n                          return _this3.checkTwoFA(sendTargetObj);\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 200);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 请求判断是否进行了2FA认证\n    checkTwoFA: function checkTwoFA(sendTargetObj) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return checkTwoFARegisterApi(JSON.stringify({\n                  userId: _this4.ruleForm.IDNo,\n                  email: _this4.ruleForm.ConfirmEmailAddress\n                })).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(res) {\n                    var _res$data$result, need2FA, needBind, register, qrCode, uri, params;\n\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (!(res.status === 200 && res.data.code === 0)) {\n                              _context3.next = 19;\n                              break;\n                            }\n\n                            console.log(res.data.result);\n                            _res$data$result = res.data.result, need2FA = _res$data$result.need2FA, needBind = _res$data$result.needBind, register = _res$data$result.register, qrCode = _res$data$result.qrCode, uri = _res$data$result.uri;\n                            console.log(need2FA, needBind, 'end');\n\n                            if (!register) {\n                              _context3.next = 8;\n                              break;\n                            }\n\n                            // 进行用户状态检测是否已经注册了账号？\n                            _this4.dialogVisibleTips = true;\n                            _context3.next = 17;\n                            break;\n\n                          case 8:\n                            if (!need2FA) {\n                              _context3.next = 16;\n                              break;\n                            }\n\n                            // 需要2FA\n                            // this.isShow = true;\n                            _this4.QRCodeUrl = qrCode; // this.$router.push({ name: 'Registering', params: { formData: sendTargetObj, qrCode: qrCode } });\n\n                            params = {\n                              formData: sendTargetObj,\n                              qrCode: qrCode\n                            }; // sesstionstorage\n\n                            _context3.next = 13;\n                            return sessionStorage.setItem('params', JSON.stringify(params));\n\n                          case 13:\n                            _this4.$router.push('/registering');\n\n                            _context3.next = 17;\n                            break;\n\n                          case 16:\n                            // 不需要2FA\n                            _this4.$router.push('/registrationsuccess');\n\n                          case 17:\n                            _context3.next = 21;\n                            break;\n\n                          case 19:\n                            _this4.$notify.error({\n                              title: 'error',\n                              message: \"Message\\uFF1A\".concat(res.data.message),\n                              duration: 0,\n                              position: 'bottom-left',\n                              showClose: true\n                            });\n\n                            _this4.resetForm('ruleForm');\n\n                          case 21:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }(), function (err) {\n                  _this4.$notify.error({\n                    title: 'erros',\n                    message: \"error status:\".concat(err.response.status),\n                    duration: 0,\n                    position: 'bottom-left',\n                    showClose: true\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    // ios 特殊处理\n    handleRadioClick: function handleRadioClick(event) {\n      // 在 iOS 上处理点击事件来更新选中状态\n      var label = event.target.textContent.trim();\n      var selectedOption = this.options.find(function (option) {\n        return option.label === label;\n      });\n      this.ruleForm.Sex = selectedOption ? selectedOption.value : '';\n    },\n    // 获取所有数据\n    getAllData: function getAllData() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return getAllDataApi().then(function (res) {\n                  if (res.status == 200) {\n                    if (res.data.code === 0) {\n                      var _res$data$result2 = res.data.result,\n                          idTypeList = _res$data$result2.idTypeList,\n                          maritalStatusList = _res$data$result2.maritalStatusList,\n                          placeOfBirthList = _res$data$result2.placeOfBirthList,\n                          citizenshipList = _res$data$result2.citizenshipList,\n                          registerNotes = _res$data$result2.registerNotes;\n                      _this5.IDTypeSelect = idTypeList;\n                      _this5.PlaceofBirthSelect = sortArrayByFirstLetter(placeOfBirthList);\n                      _this5.MaritalStatusSelect = sortArrayByFirstLetter(maritalStatusList);\n                      _this5.CitizenshipSelect = sortArrayByFirstLetter(citizenshipList).filter(function (item) {\n                        return item != 'Singapore Citizen';\n                      });\n                      _this5.textMes = registerNotes;\n                    }\n                  }\n                }, function (error) {\n                  _this5.$notify.error({\n                    title: 'error',\n                    message: error,\n                    duration: 0,\n                    position: 'bottom-left',\n                    showClose: true\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    submitForm: function submitForm(formName) {\n      var _this6 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          // 是否通过了验证\n          if (!_this6.isPass) {\n            _this6.dialogVisible = true;\n          } else {\n            _this6.dialogVisible = false;\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    getPubKey: function getPubKey() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return getPubKeyApi().then(function (res) {\n                  _this7.pubKey = res.data.data.pubkey;\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  },\n  created: function created() {\n    if (isMobile()) {\n      // alert('移动端')\n      this.dialogWidth = '100%';\n      this.dialogWidthTips = '100%';\n    } else {\n      // alert(\"pc端\")\n      this.dialogWidth = '30%';\n      this.dialogWidthTips = '50%';\n    }\n  },\n  mounted: function mounted() {\n    var _this8 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var target;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              target = document.getElementById('card');\n              target.style.opacity = '0';\n              target.style.zIndex = '-999999';\n              target.style.transition = 'all 0.6s';\n              _context7.next = 6;\n              return _this8.getPubKey();\n\n            case 6:\n              _context7.next = 8;\n              return _this8.getAllData();\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["components","DragVerify","Country","data","callback","sg_Reg","codeType","passwordStrength","regexLength","regexLower","passwordCheckResult","pickerOptions","disabledDate","time","onPick","picker","pubKey","sendTargetObj","isShow","QRCodeUrl","mainKey","registerMessage","isPass","dialogWidth","dialogWidthTips","textMes","IDTypeSelect","PlaceofBirthSelect","MaritalStatusSelect","CitizenshipSelect","RaceSelect","dialogVisible","dialogVisibleTips","ruleForm","IDType","IDNo","FullName","Sex","PlaceofBirth","Race","spRace","MaritalStatus","DateofBirth","Citizenship","spCitizenship","TypeofDwelling","spTypeofDwelling","MobileNumber","EmailAddress","ConfirmEmailAddress","CreatePassword","ConfirmPassword","TermsandConditions","options","label","value","rules","required","message","trigger","validator","pattern","type","computed","resDate","RaceComputed","CitizenshipComputed","methods","getCountrys","val","getProgressColor","percentage","evaluatePasswordStrength","password","checkPassword","REGEXLENGHT","PASSWORD_REG","hiddenDiv","target","showDiv","cancelSubmitForm","handleClose","toLoginIn","setTimeout","clearingTochange","clearingTochangeCiti","sendMessage","console","encryptor","scPwd","timesToFormateall","idType","nric","fullName","sex","placeOfBirth","race","maritalStatus","dateOfBirth","citizenship","typeOfDwelling","mobileNumber","emailAddress","agreeAgreement","checkTwoFA","checkTwoFARegisterApi","userId","email","res","need2FA","needBind","register","qrCode","uri","params","formData","sessionStorage","title","duration","position","showClose","handleRadioClick","event","getAllData","getAllDataApi","submitForm","formName","resetForm","getPubKey","getPubKeyApi","created","mounted","document"],"sourceRoot":"src/views/Register","sources":["Register.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"out-box\">\n            <div class=\"top_box\">\n                <div class=\"form_title\">\n                    <span>Registration Form</span>\n                </div>\n                <div class=\"innerhtml\">\n                    <el-row>\n                        <el-col :span=\"24\">\n                            <div id=\"sprichhtml\" v-html=\"textMes\"></div>\n                        </el-col>\n                    </el-row>\n                </div>\n            </div>\n            <div class=\"middle_box\">\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\" class=\"demo-ruleForm\" label-position=\"top\">\n                    <el-row :gutter=\"24\">\n                        <!-- <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"ID Type\" prop=\"IDType\">\n                                <el-select\n                                    v-model=\"ruleForm.IDType\"\n                                    filterable\n                                    placeholder=\"Please Select Your ID Type\"\n                                    style=\"width: 100%\"\n                                    @focus=\"getAllidType\"\n                                >\n                                    <el-option v-for=\"item in IDTypeSelect\" :key=\"item\" :label=\"item\" :value=\"item\"> </el-option>\n                                </el-select>\n                            </el-form-item>\n                        </el-col> -->\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"ID No\" prop=\"IDNo\">\n                                <el-input v-model=\"ruleForm.IDNo\" clearable placeholder=\"Please Input Your ID No\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Full Name\" prop=\"FullName\">\n                                <el-input v-model=\"ruleForm.FullName\" clearable placeholder=\"Please Input Your Full Name\"></el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Sex\" prop=\"Sex\">\n                                <el-radio-group v-model=\"ruleForm.Sex\" @click.native=\"handleRadioClick\">\n                                    <el-radio :label=\"option.value\" v-for=\"option in options\" :key=\"option.value\">{{\n                                        option.label\n                                    }}</el-radio>\n                                </el-radio-group>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <!-- <el-row :gutter=\"24\">\n                    </el-row> -->\n                    <el-row :gutter=\"24\">\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Place of Birth\" prop=\"PlaceofBirth\">\n                                <el-select\n                                    v-model=\"ruleForm.PlaceofBirth\"\n                                    filterable\n                                    placeholder=\"Please Select Your Place of Birth\"\n                                    style=\"width: 100%\"\n                                    @focus=\"getAllPlaceofBirth\"\n                                >\n                                    <el-option v-for=\"item in PlaceofBirthSelect\" :key=\"item\" :label=\"item\" :value=\"item\"> </el-option>\n                                </el-select>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Date of Birth\" prop=\"DateofBirth\">\n                                <el-date-picker\n                                    v-model=\"ruleForm.DateofBirth\"\n                                    type=\"date\"\n                                    placeholder=\"Please Select Your Date of Birth\"\n                                    id=\"sp_date\"\n                                    class=\"pp_date\"\n                                    @change=\"changeDates\"\n                                    style=\"width: 100%\"\n                                    :picker-options=\"pickerOptions\"\n                                    format=\"dd-MM-yyyy\"\n                                >\n                                </el-date-picker>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Citizenship\" :prop=\"CitizenshipComputed ? 'spCitizenship' : 'Citizenship'\">\n                                <template v-if=\"CitizenshipComputed\">\n                                    <el-input\n                                        v-model=\"ruleForm.spCitizenship\"\n                                        @clear=\"clearingTochangeCiti\"\n                                        clearable\n                                        placeholder=\"Please Input Your Citizenship\"\n                                    ></el-input>\n                                </template>\n                                <template v-else>\n                                    <el-select\n                                        v-model=\"ruleForm.Citizenship\"\n                                        filterable\n                                        placeholder=\"Please Select Your Citizenship\"\n                                        style=\"width: 100%\"\n                                    >\n                                        <el-option v-for=\"item in CitizenshipSelect\" :key=\"item\" :label=\"item\" :value=\"item\"> </el-option>\n                                    </el-select>\n                                </template>\n                            </el-form-item>\n                        </el-col>\n                        <!-- <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Race\" :prop=\"RaceComputed ? 'spRace' : 'Race'\">\n                                <template v-if=\"RaceComputed\">\n                                    <el-input\n                                        v-model=\"ruleForm.spRace\"\n                                        clearable\n                                        @clear=\"clearingTochange\"\n                                        placeholder=\"Please Input Your Race\"\n                                    ></el-input>\n                                </template>\n                                <template v-else>\n                                    <el-select v-model=\"ruleForm.Race\" filterable placeholder=\"Please Select Your Race\" style=\"width: 100%\">\n                                        <el-option v-for=\"item in RaceSelect\" :key=\"item\" :label=\"item\" :value=\"item\"> </el-option>\n                                    </el-select>\n                                </template>\n                            </el-form-item>\n                        </el-col> -->\n                        <!-- <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Marital Status\" prop=\"MaritalStatus\">\n                                <el-select\n                                    v-model=\"ruleForm.MaritalStatus\"\n                                    filterable\n                                    placeholder=\"Please Select Your Marital Status\"\n                                    style=\"width: 100%\"\n                                >\n                                    <el-option v-for=\"item in MaritalStatusSelect\" :key=\"item\" :label=\"item\" :value=\"item\"> </el-option>\n                                </el-select>\n                            </el-form-item>\n                        </el-col> -->\n                    </el-row>\n                    <el-row :gutter=\"24\">\n                        <!-- <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Type of Dwelling\" prop=\"TypeofDwelling\">\n                                <el-input\n                                    v-model=\"ruleForm.TypeofDwelling\"\n                                    clearable\n                                    placeholder=\"Please Input Your Type of Dwelling\"\n                                ></el-input>\n                            </el-form-item>\n                        </el-col> -->\n                    </el-row>\n                    <el-row :gutter=\"24\">\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Mobile Number\" prop=\"MobileNumber\">\n                                <!-- <el-input\n                                    placeholder=\"Please Input Your Mobile Number\"\n                                    v-model=\"ruleForm.MobileNumber\"\n                                    id=\"iphone_number\"\n                                    clearable\n                                    type=\"number\"\n                                >\n                                    <i slot=\"prefix\" style=\"display: flex; align-items: center\">\n                                        <img class=\"img_number\" src=\"@/assets/img/union.svg\" alt />\n                                    </i>\n                                </el-input> -->\n                                <el-input\n                                    placeholder=\"Please Input Your Mobile Number\"\n                                    v-model=\"ruleForm.MobileNumber\"\n                                    class=\"input-with-select\"\n                                    type=\"number\"\n                                >\n                                    <template slot=\"prepend\">\n                                        <Country @excountry=\"getCountrys\"></Country>\n                                    </template>\n                                </el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Email Address\" prop=\"EmailAddress\">\n                                <el-input\n                                    v-model=\"ruleForm.EmailAddress\"\n                                    placeholder=\"Please Input Your Email Address\"\n                                    autocomplete=\"off\"\n                                    clearable\n                                >\n                                    <i slot=\"prefix\" style=\"display: flex; align-items: center\">\n                                        <img class=\"img_number\" src=\"@/assets/img/email.svg\" alt />\n                                    </i>\n                                </el-input>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Confirm Email Address\" prop=\"ConfirmEmailAddress\" autocomplete=\"off\" clearable>\n                                <el-input v-model=\"ruleForm.ConfirmEmailAddress\" placeholder=\"Please Input Your Email Address Again\">\n                                    <i slot=\"prefix\" style=\"display: flex; align-items: center\">\n                                        <img class=\"img_number\" src=\"@/assets/img/email.svg\" alt />\n                                    </i>\n                                </el-input>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n\n                    <el-row :gutter=\"24\">\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Create Password\" prop=\"CreatePassword\" clearValidate>\n                                <el-input\n                                    v-model=\"ruleForm.CreatePassword\"\n                                    show-password\n                                    clearable\n                                    type=\"password\"\n                                    placeholder=\"Please Input Your Create Password\"\n                                    @input=\"checkPassword\"\n                                    @blur=\"hiddenDiv\"\n                                    @focus=\"showDiv\"\n                                ></el-input>\n                                <div v-if=\"passwordCheckResult == null\">\n                                    <div id=\"card\">\n                                        <div>\n                                            <span v-if=\"regexLength\"\n                                                ><svg\n                                                    t=\"1692502239057\"\n                                                    class=\"icon\"\n                                                    viewBox=\"0 0 1024 1024\"\n                                                    version=\"1.1\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                    p-id=\"4856\"\n                                                    width=\"20\"\n                                                    height=\"20\"\n                                                >\n                                                    <path\n                                                        d=\"M874.183789 150.103705A511.970436 511.970436 0 1 0 1023.994127 511.979533a508.274925 508.274925 0 0 0-149.810338-361.875828z m-51.168617 237.365527L491.271975 718.92816a57.820537 57.820537 0 0 1-82.438327 0L201.885021 511.979533A58.673347 58.673347 0 0 1 284.891888 428.972666l165.445193 165.445193 289.955494-289.955494a58.104807 58.104807 0 0 1 41.219164-17.056205 57.365705 57.365705 0 0 1 41.219163 17.340475 58.957617 58.957617 0 0 1 0.28427 82.722597z\"\n                                                        fill=\"#2BB74A\"\n                                                        p-id=\"4857\"\n                                                    ></path></svg\n                                            ></span>\n                                            <span v-else\n                                                ><svg\n                                                    t=\"1692502299189\"\n                                                    class=\"icon\"\n                                                    viewBox=\"0 0 1024 1024\"\n                                                    version=\"1.1\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                    p-id=\"9338\"\n                                                    width=\"20\"\n                                                    height=\"20\"\n                                                >\n                                                    <path\n                                                        d=\"M512 64a448 448 0 1 1 0 896A448 448 0 0 1 512 64z m158.4 244.352L512 466.752 353.6 308.352l-45.248 45.248L466.752 512l-158.4 158.4 45.248 45.248L512 557.248l158.4 158.4 45.248-45.248-158.336-158.464 158.336-158.336-45.248-45.248z\"\n                                                        p-id=\"9339\"\n                                                        fill=\"#d81e06\"\n                                                    ></path>\n                                                </svg> </span\n                                            >Minimum length of 12 characters\n                                        </div>\n                                        <div>\n                                            <span v-if=\"regexLower\"\n                                                ><svg\n                                                    t=\"1692502239057\"\n                                                    class=\"icon\"\n                                                    viewBox=\"0 0 1024 1024\"\n                                                    version=\"1.1\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                    p-id=\"4856\"\n                                                    width=\"20\"\n                                                    height=\"20\"\n                                                >\n                                                    <path\n                                                        d=\"M874.183789 150.103705A511.970436 511.970436 0 1 0 1023.994127 511.979533a508.274925 508.274925 0 0 0-149.810338-361.875828z m-51.168617 237.365527L491.271975 718.92816a57.820537 57.820537 0 0 1-82.438327 0L201.885021 511.979533A58.673347 58.673347 0 0 1 284.891888 428.972666l165.445193 165.445193 289.955494-289.955494a58.104807 58.104807 0 0 1 41.219164-17.056205 57.365705 57.365705 0 0 1 41.219163 17.340475 58.957617 58.957617 0 0 1 0.28427 82.722597z\"\n                                                        fill=\"#2BB74A\"\n                                                        p-id=\"4857\"\n                                                    ></path></svg></span\n                                            ><span v-else\n                                                ><svg\n                                                    t=\"1692502299189\"\n                                                    class=\"icon\"\n                                                    viewBox=\"0 0 1024 1024\"\n                                                    version=\"1.1\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                    p-id=\"9338\"\n                                                    width=\"20\"\n                                                    height=\"20\"\n                                                >\n                                                    <path\n                                                        d=\"M512 64a448 448 0 1 1 0 896A448 448 0 0 1 512 64z m158.4 244.352L512 466.752 353.6 308.352l-45.248 45.248L466.752 512l-158.4 158.4 45.248 45.248L512 557.248l158.4 158.4 45.248-45.248-158.336-158.464 158.336-158.336-45.248-45.248z\"\n                                                        p-id=\"9339\"\n                                                        fill=\"#d81e06\"\n                                                    ></path></svg\n                                            ></span>\n                                            <div style=\"margin: -38px 0px 0px 30px\">\n                                                Must contain at least 2 of the following: <br />uppercase, lowercase, digits and special\n                                                characters\n                                            </div>\n                                        </div>\n                                        <!-- 密码强度 -->\n                                        <div>\n                                            <div>\n                                                <el-progress\n                                                    v-if=\"passwordStrength\"\n                                                    :percentage=\"passwordStrength.score * 25\"\n                                                    status=\"text\"\n                                                    :text-inside=\"true\"\n                                                    :color=\"getProgressColor(passwordStrength.score * 25)\"\n                                                ></el-progress>\n                                                <transition>\n                                                    <div v-if=\"passwordStrength\">\n                                                        <p style=\"font-size: 12px; font-weight: 800; width: 80%\">\n                                                            <span>Password Strength:</span>\n                                                            {{\n                                                                passwordStrength.score === 0\n                                                                    ? 'Very Weak'\n                                                                    : passwordStrength.score === 1\n                                                                    ? 'Weak'\n                                                                    : passwordStrength.score === 2\n                                                                    ? 'Moderate'\n                                                                    : passwordStrength.score === 3\n                                                                    ? 'Strong'\n                                                                    : 'Very Strong'\n                                                            }}\n                                                        </p>\n                                                    </div>\n                                                </transition>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Confirm Password\" prop=\"ConfirmPassword\">\n                                <el-input\n                                    v-model=\"ruleForm.ConfirmPassword\"\n                                    show-password\n                                    clearable\n                                    type=\"password\"\n                                    placeholder=\"Please Input Your Password Again\"\n                                ></el-input>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <!-- <el-row :gutter=\"24\">\n                        <el-col :sm=\"10\" :md=\"10\" :lg=\"10\" :xl=\"10\" :xs=\"24\" id=\"sp_ul\">\n                            <div class=\"sp_ul_li\">\n                                <ul>\n                                    <li>Minimum length of 12 characters</li>\n                                    <li>Must contain at least 2 of the following:</li>\n                                    <li>uppercase,lowercase, digits and special characters</li>\n                                </ul>\n                            </div>\n                        </el-col>\n                    </el-row> -->\n                    <!-- <el-row :gutter=\"24\">\n                    </el-row> -->\n                    <el-row :gutter=\"24\">\n                        <el-col :sm=\"8\" :md=\"8\" :lg=\"8\" :xl=\"8\" :xs=\"24\">\n                            <el-form-item label=\"Terms and Conditions\" prop=\"TermsandConditions\" style=\"padding: none !important\">\n                                <el-checkbox v-model=\"ruleForm.TermsandConditions\" style=\"font-weight: normal\"\n                                    >I accept the\n                                    <span class=\"sp_link\"\n                                        ><a href=\"https://www.psc.gov.sg/terms-of-use\" target=\"_blank\">Terms of Use</a></span\n                                    >，<span class=\"sp_link\"\n                                        ><a href=\"https://www.psc.gov.sg/privacy-statement\" target=\"_blank\">Privacy Statement</a></span\n                                    >\n                                    <span id=\"mobile_sp\">\n                                        and\n                                        <span class=\"sp_link\"\n                                            ><a href=\"https://uat.scholarshipsgateway.gov.sg/dashboard/fe47afcb/view\" target=\"_blank\"\n                                                >Terms and Conditions</a\n                                            ></span\n                                        >\n                                    </span>\n                                </el-checkbox>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-row :gutter=\"24\" id=\"submit_middle\">\n                        <el-col :span=\"24\">\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Submit</el-button>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                </el-form>\n                <!-- 验证 -->\n                <el-dialog title=\"Swipe And Verify\" :visible.sync=\"dialogVisible\" :width=\"dialogWidth\" :close-on-click-modal=\"false\">\n                    <DragVerify :message=\"{ isPass, mainKey }\" @sendMessage=\"sendMessage\" :key=\"mainKey\" />\n                </el-dialog>\n            </div>\n        </div>\n\n        <!-- 注册失败提醒 -->\n        <el-dialog title=\"Tips\" :visible.sync=\"dialogVisibleTips\" :width=\"dialogWidthTips\" :before-close=\"handleClose\">\n            <span>{{ registerMessage }}</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelSubmitForm\" id=\"cancelbtn\">Cancel</el-button>\n                <el-button type=\"primary\" style=\"width: max-content\" @click=\"toLoginIn\">To Log In</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport JSEncrypt from 'jsencrypt';\nimport zxcvbn from 'zxcvbn';\nimport DragVerify from '@/components/DragVerify.vue';\nimport { EMAIL_REGEX, PHONE_REG, PASSWORD_REG, REGEXLENGHT, MAXLENGHT } from '@/common/reg/index.js';\nimport { getAllDataApi, getPubKeyApi, checkTwoFARegisterApi } from '@/api/https.js';\nimport { isMobile, sortArrayByFirstLetter } from '@/utils/fun.js';\nimport { timesToFormateall } from '@/utils/times.js';\nimport Country from '../../components/Country/index';\nimport { cn_Reg, sg_Reg, hk_Reg, mo_Reg, tw_Reg, my_Reg } from '../../common/reg/phoneCountry';\nexport default {\n    components: { DragVerify, Country },\n    data() {\n        // 邮箱校验\n        var validateEmail = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter your Email Address'));\n            } else {\n                // if (this.ruleForm.EmailAddress !== '') {\n                //     this.$refs.ruleForm.validateField('checkPass');\n                // }\n                callback();\n            }\n        };\n        var validateEmail2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter email again.'));\n            } else if (value !== this.ruleForm.EmailAddress) {\n                callback(new Error('The new email address and confirmation email address do not match.'));\n            } else {\n                callback();\n            }\n        };\n        // 密码校验\n        var validatePassword = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter your Password'));\n            } else if (value.indexOf(this.ruleForm.MobileNumber) != -1 && this.ruleForm.MobileNumber != '') {\n                callback(new Error('The password cannot contain a Mobile Number, Please reset your password'));\n            } else if (value.indexOf(this.ruleForm.IDNo) != -1 && this.ruleForm.IDNo != '') {\n                callback(new Error('The password cannot contain a ID No, Please reset your password'));\n            } else if (value.indexOf(this.ruleForm.EmailAddress) != -1 && this.ruleForm.EmailAddress != '') {\n                callback(new Error('The password cannot contain a Email Address, Please reset your password'));\n            } else if (this.passwordStrength.score < 3) {\n                callback(new Error('Your password strength is low, Please reset your password'));\n            } else {\n                // if (this.ruleForm.CreatePassword !== '') {\n                // this.$refs.ruleForm.validateField('checkPass');\n                // }\n                callback();\n            }\n        };\n        var validatePassword2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter Password again'));\n            } else if (value !== this.ruleForm.CreatePassword) {\n                callback(new Error('The new password and confirmation password do not match.'));\n            } else {\n                callback();\n            }\n        };\n        // 手机号正则判断\n        var validateMobilePhone = (rule, value, callback) => {\n            // console.log(this.codeType, 'pp');\n            switch (this.codeType) {\n                // case 'cn':\n                //     cn_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                case 'sg':\n                    sg_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                // case 'hk':\n                //     hk_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                // case 'mo':\n                //     mo_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                // case 'tw':\n                //     tw_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                // case 'my':\n                //     my_Reg.test(value) ? callback() : callback(new Error('Please enter your legal mobile phone number in your country'));\n                default:\n                    callback();\n            }\n        };\n\n        return {\n            // code 的种类\n            codeType: '',\n            passwordStrength: null,\n            regexLength: false,\n            regexLower: false,\n            passwordCheckResult: null,\n            pickerOptions: {\n                disabledDate(time) {\n                    return time.getTime() > Date.now() - 8.64e6;\n                },\n                onPick(picker) {\n                    // 阻止用户查看将来时间\n                    if (picker.$options.name === 'ElDatePicker') {\n                        const { minDate, maxDate } = picker;\n                        const currentDate = new Date();\n\n                        if (maxDate && maxDate.getTime() > currentDate.getTime()) {\n                            picker.$emit('pick', [minDate, currentDate]);\n                        }\n                    }\n                }\n            },\n            pubKey: '',\n            sendTargetObj: {},\n            isShow: true,\n            QRCodeUrl: '',\n            mainKey: 0,\n            // 验证信息\n            registerMessage: 'The account has been registered, please check the information or choose to log in',\n            // 是否通过验证\n            isPass: false,\n            // 对话框的宽度\n            dialogWidth: '',\n            dialogWidthTips: '',\n            textMes: '',\n            IDTypeSelect: [],\n            PlaceofBirthSelect: [],\n            MaritalStatusSelect: [],\n            CitizenshipSelect: [],\n            RaceSelect: ['CHINESE', 'MALAY', 'INDIAN', 'EURASIAN', 'Others'],\n            dialogVisible: false,\n            dialogVisibleTips: false,\n            // 表单规则\n            ruleForm: {\n                IDType: '',\n                IDNo: '',\n                FullName: '',\n                Sex: '',\n                PlaceofBirth: '',\n                Race: '',\n                spRace: '',\n                MaritalStatus: '',\n                DateofBirth: '',\n                Citizenship: '',\n                spCitizenship: '',\n                TypeofDwelling: '',\n                spTypeofDwelling: '',\n                MobileNumber: '',\n                EmailAddress: '',\n                ConfirmEmailAddress: '',\n                CreatePassword: '',\n                ConfirmPassword: '',\n                TermsandConditions: []\n            },\n\n            options: [\n                { label: 'Male', value: 'Male' },\n                { label: 'Female', value: 'Female' }\n            ],\n            // 表单验证规则\n            rules: {\n                IDType: [{ required: true, message: 'Please choose ID Type', trigger: ['blur', 'change'] }],\n                IDNo: [{ required: true, message: 'Please enter your ID No' }],\n                FullName: [{ required: true, message: 'Please enter your FullName' }],\n                Sex: [{ required: true, message: 'Please choose your Sex' }],\n                PlaceofBirth: [{ required: true, message: 'Please choose your Place of Birth' }],\n                // Race: [{ required: true, message: 'Please choose your Race' }],\n                // MaritalStatus: [{ required: true, message: 'Please choose your Marital Status' }],\n                DateofBirth: [{ required: true, message: 'Please choose your Date of Birth', trigger: ['blur', 'change'] }],\n                Citizenship: [{ required: true, message: 'Please enter your Citizenship', trigger: ['blur', 'change'] }],\n                spCitizenship: [{ required: true, message: 'Please enter your Citizenship', trigger: ['blur', 'change'] }],\n                TypeofDwelling: [{ required: true, message: 'Please enter your TypeofDwelling', trigger: ['blur', 'change'] }],\n                spTypeofDwelling: [{ required: true, message: 'Please enter your TypeofDwelling', trigger: ['blur', 'change'] }],\n                MobileNumber: [\n                    { required: true, validator: validateMobilePhone, trigger: ['blur', 'change'] }\n                    // { pattern: this.getCountrys(), message: 'Please enter your right Mobile Number', trigger: ['blur', 'change'] }\n                ],\n                EmailAddress: [\n                    { required: true, validator: validateEmail, trigger: ['blur', 'change'] },\n                    {\n                        pattern: EMAIL_REGEX,\n                        message: 'Please enter your right Email Address',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                ConfirmEmailAddress: [\n                    { required: true, validator: validateEmail2, trigger: ['blur', 'change'] },\n                    {\n                        pattern: EMAIL_REGEX,\n                        message: 'Please enter your right Email Address',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                CreatePassword: [\n                    { required: true, validator: validatePassword, trigger: ['blur', 'change'] },\n                    {\n                        pattern: PASSWORD_REG,\n                        message: 'Please enter a password that meets the rules',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                ConfirmPassword: [\n                    { required: true, validator: validatePassword2, trigger: ['blur', 'change'] },\n                    {\n                        pattern: PASSWORD_REG,\n                        message: 'Please enter a password that meets the rules',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                TermsandConditions: [\n                    {\n                        type: 'array',\n                        required: true,\n                        message: 'Please agree to the relevant privacy agreement',\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            }\n        };\n    },\n    computed: {\n        resDate() {\n            return Dayjs(this.ruleForm.DateofBirth).format('YYYY-MM-DD HH:mm:ss');\n        },\n        RaceComputed() {\n            if (this.ruleForm.Race === 'Others') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        CitizenshipComputed() {\n            if (this.ruleForm.Citizenship === 'Others') {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    },\n    methods: {\n        // 获取国家\n        getCountrys(val) {\n            this.codeType = val.code;\n        },\n\n        getProgressColor(percentage) {\n            if (percentage <= 25) {\n                return '#db3f29'; // 其他情况显示绿色\n            } else if (percentage <= 50) {\n                return '#ed8e3e'; // 当百分比小于等于75时，显示黄色\n            } else if (percentage <= 75) {\n                return '#f5d247'; // 当百分比小于等于50时，显示橙色\n            } else {\n                return '#4aab49'; // 当百分比小于等于25时，显示红色\n            }\n        },\n        evaluatePasswordStrength(password) {\n            const result = zxcvbn(password);\n            return result;\n        },\n        checkPassword() {\n            // 最小长度为 12 个字符\n            REGEXLENGHT.test(this.ruleForm.CreatePassword) ? (this.regexLength = true) : (this.regexLength = false);\n            // //  是否包含小写字母\n            PASSWORD_REG.test(this.ruleForm.CreatePassword) ? (this.regexLower = true) : (this.regexLower = false);\n\n            const result = this.evaluatePasswordStrength(this.ruleForm.CreatePassword);\n            this.passwordStrength = result;\n        },\n        hiddenDiv() {\n            let target = document.getElementById('card');\n            target.style.opacity = '0';\n            target.style.zIndex = '-9999';\n            target.style.transition = 'all 0.6s';\n        },\n        showDiv() {\n            let target = document.getElementById('card');\n            target.style.opacity = '1';\n            target.style.zIndex = '9999999';\n            target.style.background = 'white';\n            target.style.transition = 'all 0.6s';\n        },\n        // 取消表单\n        cancelSubmitForm() {\n            this.dialogVisibleTips = false;\n            this.dialogVisible = false;\n            this.isPass = false;\n            this.mainKey = this.mainKey + 10;\n        },\n        handleClose() {\n            this.dialogVisibleTips = false;\n            this.dialogVisible = false;\n            this.isPass = false;\n            this.mainKey = this.mainKey + 1;\n        },\n\n        // 跳转到登录页面\n        toLoginIn() {\n            this.dialogVisibleTips = false;\n            this.dialogVisible = false;\n            setTimeout(() => {\n                this.$router.push('/login');\n            }, 200);\n        },\n\n        clearingTochange() {\n            this.ruleForm.Race = '';\n        },\n        clearingTochangeCiti() {\n            this.ruleForm.Citizenship = '';\n        },\n        // 获取验证状态\n        async sendMessage(val) {\n            const { isPass } = val;\n            this.isPass = isPass;\n            console.log(isPass, 'res');\n            setTimeout(async () => {\n                this.dialogVisible = false;\n\n                // 在这里整理数据\n                const {\n                    IDType,\n                    IDNo,\n                    FullName,\n                    Sex,\n                    PlaceofBirth,\n                    Race,\n                    MaritalStatus,\n                    DateofBirth,\n                    Citizenship,\n                    spCitizenship,\n                    TypeofDwelling,\n                    spRace,\n                    MobileNumber,\n                    ConfirmEmailAddress,\n                    ConfirmPassword,\n                    TermsandConditions\n                } = this.ruleForm;\n\n                // 密码加密\n                let encryptor = new JSEncrypt();\n                console.log(this.pubKey,ConfirmPassword);\n                encryptor.setPublicKey(this.pubKey);\n                let scPwd = encryptor.encrypt(ConfirmPassword);\n\n                // 日期处理\n                let resDate = timesToFormateall(DateofBirth);\n\n                let sendTargetObj = {\n                    idType: IDType,\n                    nric: IDNo,\n                    fullName: FullName,\n                    sex: Sex,\n                    placeOfBirth: PlaceofBirth,\n                    race: Race == 'Others' ? spRace : Race,\n                    maritalStatus: MaritalStatus,\n                    dateOfBirth: resDate,\n                    citizenship: Citizenship == 'Others' ? spCitizenship : Citizenship,\n                    typeOfDwelling: TypeofDwelling,\n                    mobileNumber: MobileNumber,\n                    emailAddress: ConfirmEmailAddress,\n                    password: scPwd,\n                    agreeAgreement: TermsandConditions.length != 0 ? true : false\n                };\n                // this.sendTargetObj = sendTargetObj;\n                console.log(sendTargetObj, 'send');\n\n                // 验证\n                await this.checkTwoFA(sendTargetObj);\n            }, 200);\n        },\n\n        // 请求判断是否进行了2FA认证\n        async checkTwoFA(sendTargetObj) {\n            await checkTwoFARegisterApi(JSON.stringify({ userId: this.ruleForm.IDNo, email: this.ruleForm.ConfirmEmailAddress })).then(\n                async (res) => {\n                    if (res.status === 200 && res.data.code === 0) {\n                        console.log(res.data.result);\n                        const { need2FA, needBind, register, qrCode, uri } = res.data.result;\n                        console.log(need2FA, needBind, 'end');\n\n                        if (register) {\n                            // 进行用户状态检测是否已经注册了账号？\n                            this.dialogVisibleTips = true;\n                        } else {\n                            if (need2FA) {\n                                // 需要2FA\n                                // this.isShow = true;\n                                this.QRCodeUrl = qrCode;\n                                // this.$router.push({ name: 'Registering', params: { formData: sendTargetObj, qrCode: qrCode } });\n\n                                let params = { formData: sendTargetObj, qrCode: qrCode };\n                                // sesstionstorage\n                                await sessionStorage.setItem('params', JSON.stringify(params));\n                                this.$router.push('/registering');\n                            } else {\n                                // 不需要2FA\n                                this.$router.push('/registrationsuccess');\n                            }\n                        }\n                    } else {\n                        this.$notify.error({\n                            title: 'error',\n                            message: `Message：${res.data.message}`,\n                            duration: 0,\n                            position: 'bottom-left',\n                            showClose: true\n                        });\n                        this.resetForm('ruleForm');\n                    }\n                },\n                (err) => {\n                    this.$notify.error({\n                        title: 'erros',\n                        message: `error status:${err.response.status}`,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // ios 特殊处理\n        handleRadioClick(event) {\n            // 在 iOS 上处理点击事件来更新选中状态\n            const label = event.target.textContent.trim();\n            const selectedOption = this.options.find((option) => option.label === label);\n            this.ruleForm.Sex = selectedOption ? selectedOption.value : '';\n        },\n        // 获取所有数据\n        async getAllData() {\n            await getAllDataApi().then(\n                (res) => {\n                    if (res.status == 200) {\n                        if (res.data.code === 0) {\n                            const { idTypeList, maritalStatusList, placeOfBirthList, citizenshipList, registerNotes } = res.data.result;\n                            this.IDTypeSelect = idTypeList;\n                            this.PlaceofBirthSelect = sortArrayByFirstLetter(placeOfBirthList);\n                            this.MaritalStatusSelect = sortArrayByFirstLetter(maritalStatusList);\n                            this.CitizenshipSelect = sortArrayByFirstLetter(citizenshipList).filter((item) => item != 'Singapore Citizen');\n                            this.textMes = registerNotes;\n                        }\n                    }\n                },\n                (error) => {\n                    this.$notify.error({\n                        title: 'error',\n                        message: error,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    // 是否通过了验证\n                    if (!this.isPass) {\n                        this.dialogVisible = true;\n                    } else {\n                        this.dialogVisible = false;\n                    }\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        },\n        async getPubKey() {\n            await getPubKeyApi().then((res) => {\n                this.pubKey = res.data.data.pubkey;\n            });\n        }\n    },\n    created() {\n        if (isMobile()) {\n            // alert('移动端')\n            this.dialogWidth = '100%';\n            this.dialogWidthTips = '100%';\n        } else {\n            // alert(\"pc端\")\n            this.dialogWidth = '30%';\n            this.dialogWidthTips = '50%';\n        }\n    },\n    async mounted() {\n        let target = document.getElementById('card');\n        target.style.opacity = '0';\n        target.style.zIndex = '-999999';\n        target.style.transition = 'all 0.6s';\n        await this.getPubKey();\n        await this.getAllData();\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import './scss/RichText.scss';\n@import './scss/index.scss';\n\n::v-deep #cancelbtn {\n    transition: all 0.3s;\n    &:hover {\n        background: #fbf5ee !important;\n        color: #ed8e3e !important;\n        border-color: #ed8e3e !important;\n    }\n}\n::v-deep p {\n    margin-top: 0px !important;\n}\n#sprichhtml {\n    height: max-content;\n    max-height: 320px;\n    overflow: scroll;\n}\n#card {\n    position: absolute;\n    top: 46px;\n    width: 100%;\n    height: max-content !important;\n    border-radius: 4px;\n    /* box-shadow: 16px 16px 64px rgba(12, 31, 80, 0.06); */\n    box-shadow: 0px 6px 17px -4px rgba(0, 0, 0, 0.15);\n    background: white;\n    padding: 10px;\n    z-index: -99999;\n    border: 1px solid #e4e7ed;\n    border-radius: 4px;\n}\nsvg {\n    margin-right: 10px !important;\n}\n\n/* 动画 */\n/* 下面我们会解释这些 class 是做什么的 */\n.v-enter-active,\n.v-leave-active {\n    transition: opacity 0.5s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n    opacity: 0;\n}\n::v-deep .el-progress-bar__innerText {\n    display: none !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}