{"ast":null,"code":"import _regeneratorRuntime from \"/Users/april/Desktop/git-lab/\\u65B0\\u52A0\\u5761/qflow-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/april/Desktop/git-lab/\\u65B0\\u52A0\\u5761/qflow-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport JSEncrypt from 'jsencrypt';\nimport DragVerify from '@/components/DragVerify.vue';\nimport { isMobile } from '@/utils/fun.js';\nimport { EMAIL_REG, PASSWORD_REG, REGEXLENGHT, REGEXLOWER, REGEXUPER, REGEXNUMBER, REGEXSP } from '@/common/reg/index.js';\nimport { getPubKeyApi, sendEmailCodeApi, changePasswordApi } from '@/api/https.js';\nimport '@/assets/css/index.css';\nexport default {\n  components: {\n    DragVerify: DragVerify\n  },\n  data: function data() {\n    var _this = this;\n\n    // 密码校验\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter your Password'));\n      } else {\n        if (_this.ruleForm.password !== '') {\n          _this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter Password again'));\n      } else if (value !== _this.ruleForm.password) {\n        callback(new Error('The new password and confirmation password do not match.'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      TIME_COUNT: 60,\n      pubKey: '',\n      mainKey: 0,\n      dialogWidth: '',\n      isPass: false,\n      dialogVisible: false,\n      isClick: true,\n      // 第一次发送\n      isFirst: true,\n      // password\n      passwordCheckLoading: false,\n      passwordCheckResult: null,\n      regexLength: false,\n      regexLower: false,\n      regexUper: false,\n      regexNumber: false,\n      regexSp: false,\n      showTime: true\n      /* 布尔值，通过v-show控制显示‘获取按钮’还是‘倒计时’ */\n      ,\n      sendTime: ''\n      /* 倒计时 计数器 */\n      ,\n      timer: null,\n      ruleForm: {\n        usertag: '',\n        yzm: '',\n        password: '',\n        repassword: ''\n      },\n      // 控制密码的显示和隐藏\n      rules: {\n        usertag: [{\n          required: true,\n          message: 'Please enter your email address',\n          trigger: ['blur', 'change']\n        }, {\n          pattern: EMAIL_REG,\n          message: 'please enter a valid email address',\n          trigger: ['blur', 'change']\n        }],\n        yzm: [{\n          required: true,\n          message: 'Please enter the verification code you received',\n          trigger: ['blur', 'change']\n        }],\n        password: [{\n          required: true,\n          validator: validatePassword,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: PASSWORD_REG,\n          message: 'Please enter a password that meets the rules',\n          trigger: ['blur', 'change']\n        }],\n        repassword: [{\n          required: true,\n          validator: validatePassword2,\n          trigger: ['blur', 'change']\n        }, {\n          pattern: PASSWORD_REG,\n          message: 'Please enter a password that meets the rules',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    checkPassword: function checkPassword() {\n      // 最小长度为 12 个字符\n      REGEXLENGHT.test(this.ruleForm.password) ? this.regexLength = true : this.regexLength = false; // //  是否包含小写字母\n\n      PASSWORD_REG.test(this.ruleForm.password) ? this.regexLower = true : this.regexLower = false; // // 是否包含大些字母\n      // REGEXUPER.test(this.ruleForm.password) ? (this.regexUper = true) : (this.regexUper = false);\n      // // 必须包含数字\n      // REGEXNUMBER.test(this.ruleForm.password) ? (this.regexNumber = true) : (this.regexNumber = false);\n      // // 特殊字符\n      // REGEXSP.test(this.ruleForm.password) ? (this.regexSp = true) : (this.regexSp = false);\n    },\n    hiddenDiv: function hiddenDiv() {\n      var target = document.getElementById('card');\n      target.style.opacity = '0';\n      target.style.zIndex = '-9999';\n      target.style.transition = 'all 0.6s';\n    },\n    showDiv: function showDiv() {\n      var target = document.getElementById('card');\n      target.style.opacity = '1';\n      target.style.zIndex = '9999';\n      target.style.transition = 'all 0.6s';\n    },\n    toLogin: function toLogin() {\n      this.$router.push('/login');\n    },\n    sendEmail: function sendEmail() {\n      var _this2 = this;\n\n      this.$refs.ruleForm.validateField('usertag', function (errMsg) {\n        if (errMsg) {// console.log('手机号校验未通过');\n        } else {\n          // console.log('校验通过');\n          _this2.dialogVisible = true;\n          _this2.mainKey = _this2.mainKey + 1;\n        }\n      });\n    },\n    // 获取验证状态----图片拼接\n    sendMessage: function sendMessage(val) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isPass;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isPass = val.isPass;\n                _this3.isPass = isPass;\n                _this3.dialogVisible = false;\n                _context.next = 5;\n                return _this3.sendEmailCode();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    startTimes: function startTimes() {\n      var _this4 = this;\n\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var TIME_COUNT;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this4.isClick = false;\n                /*发送验证码时，开始计数，一分钟发送一次*/\n\n                TIME_COUNT = _this4.TIME_COUNT; //  更改倒计时时间\n\n                if (!_this4.timer) {\n                  _this4.sendTime = TIME_COUNT;\n                  _this4.showTime = false;\n                  _this4.timer = setInterval(function () {\n                    if (_this4.sendTime > 0 && _this4.sendTime <= TIME_COUNT) {\n                      _this4.sendTime--;\n                    } else {\n                      _this4.showTime = true;\n                      _this4.isFirst = false;\n                      clearInterval(_this4.timer); // 清除定时器\n\n                      _this4.timer = null;\n                    }\n                  }, 1000);\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })), 200);\n    },\n    // 发送验证码\n    sendEmailCode: function sendEmailCode() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return sendEmailCodeApi(JSON.stringify({\n                  email: _this5.ruleForm.usertag\n                })).then(function (res) {\n                  if (res.status == 200) {\n                    if (res.data.code === 0) {\n                      _this5.$notify.success({\n                        title: 'Sent successfully',\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                      });\n\n                      _this5.startTimes();\n                    } else {\n                      if (res.data.code == 40011) {\n                        _this5.$notify.error({\n                          title: 'Error',\n                          message: \"User does not exist\",\n                          duration: 0,\n                          position: 'bottom-left',\n                          showClose: true\n                        });\n                      } else {\n                        _this5.$notify.error({\n                          title: 'Error',\n                          message: \"errorCode \".concat(res.data.code),\n                          duration: 0,\n                          position: 'bottom-left',\n                          showClose: true\n                        });\n                      }\n                    }\n                  }\n                }, function (error) {\n                  _this5.$notify.error({\n                    title: 'Error',\n                    message: error,\n                    duration: 0,\n                    position: 'bottom-left',\n                    showClose: true\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    // 更改密码\n    changePassword: function changePassword() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this6$ruleForm, usertag, yzm, password, encryptor, rsapwd;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this6$ruleForm = _this6.ruleForm, usertag = _this6$ruleForm.usertag, yzm = _this6$ruleForm.yzm, password = _this6$ruleForm.password;\n                encryptor = new JSEncrypt();\n                encryptor.setPublicKey(_this6.pubKey);\n                rsapwd = encryptor.encrypt(password);\n                _context4.next = 6;\n                return changePasswordApi(JSON.stringify({\n                  email: usertag,\n                  verificationCode: yzm,\n                  password: rsapwd\n                })).then(function (res) {\n                  if (res.status == 200) {\n                    if (res.data.code === 0) {\n                      if (res.data.result.errCode === 0) {\n                        _this6.$notify.success({\n                          title: 'Reset Password Successfully',\n                          duration: 0,\n                          position: 'bottom-left',\n                          showClose: true\n                        });\n\n                        setTimeout(function () {\n                          _this6.$router.push('/login');\n                        }, 3000);\n                      } else {\n                        _this6.$notify.error({\n                          title: 'Error',\n                          message: \"errorCode \".concat(res.data.result.errCode),\n                          duration: 0,\n                          position: 'bottom-left',\n                          showClose: true\n                        });\n                      }\n                    } else {\n                      _this6.$notify.error({\n                        title: 'Error',\n                        message: \"errorCode \".concat(res.data.code),\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                      });\n                    }\n                  }\n                }, function (error) {\n                  _this6.$notify.error({\n                    title: 'Hint',\n                    message: error,\n                    duration: 0,\n                    position: 'bottom-left',\n                    showClose: true\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    // 表单提交\n    submitForm: function submitForm(formName) {\n      var _this7 = this;\n\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(valid) {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!valid) {\n                    _context5.next = 6;\n                    break;\n                  }\n\n                  // 进行表单的提交\n                  console.log('success');\n                  _context5.next = 4;\n                  return _this7.changePassword();\n\n                case 4:\n                  _context5.next = 7;\n                  break;\n\n                case 6:\n                  console.log('error');\n\n                case 7:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    // 获取pubKey\n    getPubKey: function getPubKey() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return getPubKeyApi().then(function (res) {\n                  _this8.pubKey = res.data.data.pubkey;\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  },\n  created: function created() {\n    if (isMobile()) {\n      // alert('移动端')\n      this.dialogWidth = '100%';\n    } else {\n      // alert(\"pc端\")\n      this.dialogWidth = '30%';\n    }\n  },\n  mounted: function mounted() {\n    var _this9 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var target;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              target = document.getElementById('card');\n              target.style.opacity = '0';\n              target.style.zIndex = '-9999';\n              target.style.transition = 'all 0.6s';\n              _context7.next = 6;\n              return _this9.getPubKey();\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};","map":{"version":3,"mappings":"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","names":["components","DragVerify","data","callback","TIME_COUNT","pubKey","mainKey","dialogWidth","isPass","dialogVisible","isClick","isFirst","passwordCheckLoading","passwordCheckResult","regexLength","regexLower","regexUper","regexNumber","regexSp","showTime","sendTime","timer","ruleForm","usertag","yzm","password","repassword","rules","required","message","trigger","pattern","validator","methods","checkPassword","REGEXLENGHT","PASSWORD_REG","hiddenDiv","target","showDiv","toLogin","sendEmail","sendMessage","val","startTimes","setTimeout","clearInterval","sendEmailCode","sendEmailCodeApi","email","title","duration","position","showClose","changePassword","encryptor","rsapwd","changePasswordApi","verificationCode","submitForm","formName","valid","console","getPubKey","getPubKeyApi","created","mounted","document"],"sourceRoot":"src/views/RePassWord","sources":["RePassForm.vue"],"sourcesContent":["<template>\n    <div class=\"login-box\">\n        <div class=\"login-box-top-area\">\n            <div class=\"login-title\">\n                <span>Scholarship Management Gateway System</span>\n            </div>\n            <div class=\"login-top-text\">\n                <span>Reset Password</span>\n            </div>\n        </div>\n        <div class=\"login-form\">\n            <div class=\"login-box\">\n                <div class=\"login-form\">\n                    <el-form ref=\"ruleForm\" :model=\"ruleForm\" class=\"demo-ruleForm\" :rules=\"rules\">\n                        <el-form-item class=\"form-items\" prop=\"usertag\">\n                            <el-input v-model=\"ruleForm.usertag\" placeholder=\"Please enter your email address\"></el-input>\n                        </el-form-item>\n\n                        <el-form-item prop=\"yzm\">\n                            <div id=\"spbttn\">\n                                <el-input\n                                    v-model=\"ruleForm.yzm\"\n                                    autocomplete=\"off\"\n                                    placeholder=\"Please enter your code\"\n                                    id=\"spinput\"\n                                    style=\"border-right: none !important\"\n                                >\n                                </el-input>\n\n                                <el-button id=\"sp_btn\" v-show=\"showTime\" type=\"text\" @click=\"sendEmail(ruleForm.yzm)\">{{\n                                    isFirst ? 'Send' : 'Resend'\n                                }}</el-button>\n                                <el-button id=\"sp_btn2\" slot=\"append\" type=\"text\" disabled v-show=\"!showTime\"\n                                    >{{ sendTime }} Second</el-button\n                                >\n                            </div>\n                        </el-form-item>\n\n                        <!-- -------------- -->\n                        <el-form-item prop=\"password\">\n                            <el-input\n                                v-model=\"ruleForm.password\"\n                                show-password\n                                clearable\n                                type=\"password\"\n                                placeholder=\"Please Input Your Password\"\n                                @input=\"checkPassword\"\n                                @blur=\"hiddenDiv\"\n                                @focus=\"showDiv\"\n                            ></el-input>\n                            <div v-if=\"passwordCheckResult == null\">\n                                <div id=\"card\">\n                                    <div>\n                                        <span v-if=\"regexLength\"\n                                            ><svg\n                                                t=\"1692502239057\"\n                                                class=\"icon\"\n                                                viewBox=\"0 0 1024 1024\"\n                                                version=\"1.1\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                p-id=\"4856\"\n                                                width=\"20\"\n                                                height=\"20\"\n                                            >\n                                                <path\n                                                    d=\"M874.183789 150.103705A511.970436 511.970436 0 1 0 1023.994127 511.979533a508.274925 508.274925 0 0 0-149.810338-361.875828z m-51.168617 237.365527L491.271975 718.92816a57.820537 57.820537 0 0 1-82.438327 0L201.885021 511.979533A58.673347 58.673347 0 0 1 284.891888 428.972666l165.445193 165.445193 289.955494-289.955494a58.104807 58.104807 0 0 1 41.219164-17.056205 57.365705 57.365705 0 0 1 41.219163 17.340475 58.957617 58.957617 0 0 1 0.28427 82.722597z\"\n                                                    fill=\"#2BB74A\"\n                                                    p-id=\"4857\"\n                                                ></path></svg\n                                        ></span>\n                                        <span v-else\n                                            ><svg\n                                                t=\"1692502299189\"\n                                                class=\"icon\"\n                                                viewBox=\"0 0 1024 1024\"\n                                                version=\"1.1\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                p-id=\"9338\"\n                                                width=\"20\"\n                                                height=\"20\"\n                                            >\n                                                <path\n                                                    d=\"M512 64a448 448 0 1 1 0 896A448 448 0 0 1 512 64z m158.4 244.352L512 466.752 353.6 308.352l-45.248 45.248L466.752 512l-158.4 158.4 45.248 45.248L512 557.248l158.4 158.4 45.248-45.248-158.336-158.464 158.336-158.336-45.248-45.248z\"\n                                                    p-id=\"9339\"\n                                                    fill=\"#d81e06\"\n                                                ></path>\n                                            </svg> </span\n                                        >Minimum length of 12 characters\n                                    </div>\n\n                                    <div>\n                                        <span v-if=\"regexLower\"\n                                            ><svg\n                                                t=\"1692502239057\"\n                                                class=\"icon\"\n                                                viewBox=\"0 0 1024 1024\"\n                                                version=\"1.1\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                p-id=\"4856\"\n                                                width=\"20\"\n                                                height=\"20\"\n                                            >\n                                                <path\n                                                    d=\"M874.183789 150.103705A511.970436 511.970436 0 1 0 1023.994127 511.979533a508.274925 508.274925 0 0 0-149.810338-361.875828z m-51.168617 237.365527L491.271975 718.92816a57.820537 57.820537 0 0 1-82.438327 0L201.885021 511.979533A58.673347 58.673347 0 0 1 284.891888 428.972666l165.445193 165.445193 289.955494-289.955494a58.104807 58.104807 0 0 1 41.219164-17.056205 57.365705 57.365705 0 0 1 41.219163 17.340475 58.957617 58.957617 0 0 1 0.28427 82.722597z\"\n                                                    fill=\"#2BB74A\"\n                                                    p-id=\"4857\"\n                                                ></path></svg></span\n                                        ><span v-else\n                                            ><svg\n                                                t=\"1692502299189\"\n                                                class=\"icon\"\n                                                viewBox=\"0 0 1024 1024\"\n                                                version=\"1.1\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                p-id=\"9338\"\n                                                width=\"20\"\n                                                height=\"20\"\n                                            >\n                                                <path\n                                                    d=\"M512 64a448 448 0 1 1 0 896A448 448 0 0 1 512 64z m158.4 244.352L512 466.752 353.6 308.352l-45.248 45.248L466.752 512l-158.4 158.4 45.248 45.248L512 557.248l158.4 158.4 45.248-45.248-158.336-158.464 158.336-158.336-45.248-45.248z\"\n                                                    p-id=\"9339\"\n                                                    fill=\"#d81e06\"\n                                                ></path></svg\n                                        ></span>\n                                        <div style=\"margin: -38px 0px 0px 30px\">\n                                            Must contain at least 2 of the following: <br />uppercase, lowercase, digits and special\n                                            characters\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </el-form-item>\n                        <el-form-item prop=\"repassword\">\n                            <el-input\n                                v-model=\"ruleForm.repassword\"\n                                show-password\n                                clearable\n                                type=\"password\"\n                                placeholder=\"Please Input Your Password Again\"\n                            ></el-input>\n                        </el-form-item>\n                        <!-- --------- -->\n                        <el-form-item class=\"form-items\">\n                            <div class=\"box-form-out\">\n                                <div class=\"box-form-out-in-box\">\n                                    <div class=\"box-form-out-inner\">\n                                        <el-button\n                                            type=\"primary\"\n                                            :class=\"isClick ? 'cancelbtn1' : 'cancelbtn2'\"\n                                            @click=\"submitForm('ruleForm')\"\n                                            :disabled=\"isClick\"\n                                            >Reset Password</el-button\n                                        >\n                                    </div>\n                                </div>\n                            </div>\n                        </el-form-item>\n                    </el-form>\n                </div>\n                <div class=\"login-box-bottom-area\">\n                    <div class=\"bottom-text-signup\">\n                        <div>\n                            <p><span @click=\"toLogin\">Log in</span></p>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- 验证 -->\n                <el-dialog title=\"Swipe And Verify\" :visible.sync=\"dialogVisible\" :width=\"dialogWidth\" :close-on-click-modal=\"false\">\n                    <!-- <DragVerify :message=\"{ isPass, dialogVisible }\" @sendMessage=\"sendMessage\" :key=\"mainKey\" /> -->\n                    <DragVerify :message=\"{ isPass, dialogVisible }\" @sendMessage=\"sendMessage\" :key=\"mainKey\" />\n                </el-dialog>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport JSEncrypt from 'jsencrypt';\nimport DragVerify from '@/components/DragVerify.vue';\nimport { isMobile } from '@/utils/fun.js';\nimport { EMAIL_REG, PASSWORD_REG, REGEXLENGHT, REGEXLOWER, REGEXUPER, REGEXNUMBER, REGEXSP } from '@/common/reg/index.js';\nimport { getPubKeyApi, sendEmailCodeApi, changePasswordApi } from '@/api/https.js';\nimport '@/assets/css/index.css';\nexport default {\n    components: { DragVerify },\n    data() {\n        // 密码校验\n        var validatePassword = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter your Password'));\n            } else {\n                if (this.ruleForm.password !== '') {\n                    this.$refs.ruleForm.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n        var validatePassword2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('Please enter Password again'));\n            } else if (value !== this.ruleForm.password) {\n                callback(new Error('The new password and confirmation password do not match.'));\n            } else {\n                callback();\n            }\n        };\n\n        return {\n            TIME_COUNT: 60,\n            pubKey: '',\n            mainKey: 0,\n            dialogWidth: '',\n            isPass: false,\n            dialogVisible: false,\n            isClick: true,\n            // 第一次发送\n            isFirst: true,\n            // password\n            passwordCheckLoading: false,\n            passwordCheckResult: null,\n            regexLength: false,\n            regexLower: false,\n            regexUper: false,\n            regexNumber: false,\n            regexSp: false,\n\n            showTime: true /* 布尔值，通过v-show控制显示‘获取按钮’还是‘倒计时’ */,\n            sendTime: '' /* 倒计时 计数器 */,\n            timer: null,\n\n            ruleForm: {\n                usertag: '',\n                yzm: '',\n                password: '',\n                repassword: ''\n            },\n            // 控制密码的显示和隐藏\n            rules: {\n                usertag: [\n                    { required: true, message: 'Please enter your email address', trigger: ['blur', 'change'] },\n                    {\n                        pattern: EMAIL_REG,\n                        message: 'please enter a valid email address',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                yzm: [{ required: true, message: 'Please enter the verification code you received', trigger: ['blur', 'change'] }],\n                password: [\n                    { required: true, validator: validatePassword, trigger: ['blur', 'change'] },\n                    {\n                        pattern: PASSWORD_REG,\n                        message: 'Please enter a password that meets the rules',\n                        trigger: ['blur', 'change']\n                    }\n                ],\n                repassword: [\n                    { required: true, validator: validatePassword2, trigger: ['blur', 'change'] },\n                    {\n                        pattern: PASSWORD_REG,\n                        message: 'Please enter a password that meets the rules',\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            }\n        };\n    },\n    methods: {\n        checkPassword() {\n            // 最小长度为 12 个字符\n            REGEXLENGHT.test(this.ruleForm.password) ? (this.regexLength = true) : (this.regexLength = false);\n            // //  是否包含小写字母\n            PASSWORD_REG.test(this.ruleForm.password) ? (this.regexLower = true) : (this.regexLower = false);\n            // // 是否包含大些字母\n            // REGEXUPER.test(this.ruleForm.password) ? (this.regexUper = true) : (this.regexUper = false);\n            // // 必须包含数字\n            // REGEXNUMBER.test(this.ruleForm.password) ? (this.regexNumber = true) : (this.regexNumber = false);\n            // // 特殊字符\n            // REGEXSP.test(this.ruleForm.password) ? (this.regexSp = true) : (this.regexSp = false);\n        },\n        hiddenDiv() {\n            let target = document.getElementById('card');\n            target.style.opacity = '0';\n            target.style.zIndex = '-9999';\n            target.style.transition = 'all 0.6s';\n        },\n        showDiv() {\n            let target = document.getElementById('card');\n            target.style.opacity = '1';\n            target.style.zIndex = '9999';\n            target.style.transition = 'all 0.6s';\n        },\n        toLogin() {\n            this.$router.push('/login');\n        },\n        sendEmail() {\n            this.$refs.ruleForm.validateField('usertag', (errMsg) => {\n                if (errMsg) {\n                    // console.log('手机号校验未通过');\n                } else {\n                    // console.log('校验通过');\n                    this.dialogVisible = true;\n                    this.mainKey = this.mainKey + 1;\n                }\n            });\n        },\n        // 获取验证状态----图片拼接\n        async sendMessage(val) {\n            const { isPass } = val;\n            this.isPass = isPass;\n            this.dialogVisible = false;\n            await this.sendEmailCode();\n        },\n\n        startTimes() {\n            setTimeout(async () => {\n                this.isClick = false;\n                /*发送验证码时，开始计数，一分钟发送一次*/\n                const TIME_COUNT = this.TIME_COUNT; //  更改倒计时时间\n                if (!this.timer) {\n                    this.sendTime = TIME_COUNT;\n                    this.showTime = false;\n                    this.timer = setInterval(() => {\n                        if (this.sendTime > 0 && this.sendTime <= TIME_COUNT) {\n                            this.sendTime--;\n                        } else {\n                            this.showTime = true;\n                            this.isFirst = false;\n                            clearInterval(this.timer); // 清除定时器\n                            this.timer = null;\n                        }\n                    }, 1000);\n                }\n            }, 200);\n        },\n\n        // 发送验证码\n        async sendEmailCode() {\n            await sendEmailCodeApi(JSON.stringify({ email: this.ruleForm.usertag })).then(\n                (res) => {\n                    if (res.status == 200) {\n                        if (res.data.code === 0) {\n                            this.$notify.success({\n                                title: 'Sent successfully',\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                            this.startTimes();\n                        } else {\n                            if (res.data.code == 40011) {\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: `User does not exist`,\n                                    duration: 0,\n                                    position: 'bottom-left',\n                                    showClose: true\n                                });\n                            } else {\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: `errorCode ${res.data.code}`,\n                                    duration: 0,\n                                    position: 'bottom-left',\n                                    showClose: true\n                                });\n                            }\n                        }\n                    }\n                },\n                (error) => {\n                    this.$notify.error({\n                        title: 'Error',\n                        message: error,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // 更改密码\n        async changePassword() {\n            const { usertag, yzm, password } = this.ruleForm;\n            let encryptor = new JSEncrypt();\n            encryptor.setPublicKey(this.pubKey);\n            let rsapwd = encryptor.encrypt(password);\n            await changePasswordApi(JSON.stringify({ email: usertag, verificationCode: yzm, password: rsapwd })).then(\n                (res) => {\n                    if (res.status == 200) {\n                        if (res.data.code === 0) {\n                            if (res.data.result.errCode === 0) {\n                                this.$notify.success({\n                                    title: 'Reset Password Successfully',\n                                    duration: 0,\n                                    position: 'bottom-left',\n                                    showClose: true\n                                });\n                                setTimeout(() => {\n                                    this.$router.push('/login');\n                                }, 3000);\n                            } else {\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: `errorCode ${res.data.result.errCode}`,\n                                    duration: 0,\n                                    position: 'bottom-left',\n                                    showClose: true\n                                });\n                            }\n                        } else {\n                            this.$notify.error({\n                                title: 'Error',\n                                message: `errorCode ${res.data.code}`,\n                                duration: 0,\n                                position: 'bottom-left',\n                                showClose: true\n                            });\n                        }\n                    }\n                },\n                (error) => {\n                    this.$notify.error({\n                        title: 'Hint',\n                        message: error,\n                        duration: 0,\n                        position: 'bottom-left',\n                        showClose: true\n                    });\n                }\n            );\n        },\n\n        // 表单提交\n        submitForm(formName) {\n            this.$refs[formName].validate(async (valid) => {\n                if (valid) {\n                    // 进行表单的提交\n                    console.log('success');\n                    await this.changePassword();\n                } else {\n                    console.log('error');\n                }\n            });\n        },\n\n        // 获取pubKey\n        async getPubKey() {\n            await getPubKeyApi().then((res) => {\n                this.pubKey = res.data.data.pubkey;\n            });\n        }\n    },\n    created() {\n        if (isMobile()) {\n            // alert('移动端')\n            this.dialogWidth = '100%';\n        } else {\n            // alert(\"pc端\")\n            this.dialogWidth = '30%';\n        }\n    },\n    async mounted() {\n        let target = document.getElementById('card');\n        target.style.opacity = '0';\n        target.style.zIndex = '-9999';\n        target.style.transition = 'all 0.6s';\n        await this.getPubKey();\n    }\n};\n</script>\n<style lang=\"scss\" scoped>\n[v-cloak] {\n    display: none;\n}\n@import '@/assets/scss/PcLoginForm.scss';\n@import '@/assets/scss/MobileLoginForm.scss';\n@import './scss/index.scss';\n</style>\n"]},"metadata":{},"sourceType":"module"}