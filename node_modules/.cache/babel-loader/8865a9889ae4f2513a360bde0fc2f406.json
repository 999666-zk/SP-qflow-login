{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport dragVerifyImgChip from 'vue-drag-verify-img-chip';\nexport default {\n  props: {\n    message: Object,\n    mainKey: Number\n  },\n  components: {\n    dragVerifyImgChip: dragVerifyImgChip\n  },\n  data: function data() {\n    return {\n      pick: '',\n      // 该图片路径必须为根路径\n      imgURl: ['./verify1.png', './verify2.png', './verify3.png', './verify4.png', './verify5.png', './verify6.png'],\n      checkImg: \"\",\n      isPassing: null\n    };\n  },\n  computed: {},\n  methods: {\n    pass: function pass() {\n      // 这里执行验证成功后的内容\n      var isPass = this.message.isPass;\n      this.$emit('sendMessage', {\n        isPass: !isPass\n      });\n    },\n    nopass: function nopass() {\n      // 验证未通过\n      var isFailed = this.message.isFailed;\n      this.$emit('sendFiledMessage', {\n        isFailed: !isFailed\n      });\n    },\n    reimg: function reimg() {\n      var radomNum = this.getRandomInt(6);\n      this.checkImg = this.imgURl[radomNum];\n    },\n    getRandomInt: function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.reimg();\n    var min = 1;\n    var max = 6;\n    var randomInteger = Math.floor(Math.random() * (max - min + 1)) + min;\n    this.checkImg = \"./verify\".concat(randomInteger, \".png\");\n  },\n  watch: {\n    mainKey: function mainKey(pre, next) {\n      if (pre !== next) {\n        this.reimg();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAyBA;AACA;EACAA;IACAC,eADA;IAEAC;EAFA,CADA;EAKAC;IAAAC;EAAA,CALA;EAMAC,IANA,kBAMA;IACA;MACAC,QADA;MAEA;MACAC,8GAHA;MAIAC,YAJA;MAKAC;IALA;EAOA,CAdA;EAeAC,YAfA;EAgBAC;IACAC,IADA,kBACA;MACA;MACA;MACA;QAAAC;MAAA;IACA,CALA;IAMAC,MANA,oBAMA;MACA;MACA;MACA;QAAAC;MAAA;IACA,CAVA;IAWAC,KAXA,mBAWA;MACA;MACA;IACA,CAdA;IAgBAC,YAhBA,wBAgBAC,GAhBA,EAgBA;MACA;IACA;EAlBA,CAhBA;EAoCAC,OApCA,qBAoCA,EApCA;EAqCAC,OArCA,qBAqCA;IACA;IACA;IACA;IACA;IACA;EACA,CA3CA;EA4CAC;IACAnB,OADA,mBACAoB,GADA,EACAC,IADA,EACA;MACA;QACA;MACA;IACA;EALA;AA5CA","names":["props","message","mainKey","components","dragVerifyImgChip","data","pick","imgURl","checkImg","isPassing","computed","methods","pass","isPass","nopass","isFailed","reimg","getRandomInt","max","created","mounted","watch","pre","next"],"sourceRoot":"src/components","sources":["DragVerify.vue"],"sourcesContent":["<template>\n    <div style=\"user-select: none\">\n        <drag-verify-img-chip\n            ref=\"sss\"\n            :imgsrc=\"checkImg\"\n            :isPassing.sync=\"isPassing\"\n            :showRefresh=\"true\"\n            :barWidth=\"40\"\n            text=\"Swiping to the right side\"\n            successText=\"Verification passed\"\n            handlerIcon=\"el-icon-d-arrow-right\"\n            successIcon=\"el-icon-circle-check\"\n            @refresh=\"reimg\"\n            @passcallback=\"pass\"\n            @passfail=\"nopass\"\n            :width=\"280\"\n            refreshIcon=\"el-icon-refresh-right\"\n            successTip=\"Verification passed, more than 80% of users\"\n            failTip=\"Verification failed, please try again\"\n        >\n        </drag-verify-img-chip>\n    </div>\n</template>\n\n<script>\nimport dragVerifyImgChip from 'vue-drag-verify-img-chip';\nexport default {\n    props: {\n        message: Object,\n        mainKey: Number\n    },\n    components: { dragVerifyImgChip },\n    data() {\n        return {\n            pick: '',\n            // 该图片路径必须为根路径\n            imgURl: ['./verify1.png', './verify2.png', './verify3.png', './verify4.png', './verify5.png', './verify6.png'],\n            checkImg: ``,\n            isPassing: null\n        };\n    },\n    computed: {},\n    methods: {\n        pass() {\n            // 这里执行验证成功后的内容\n            const { isPass } = this.message;\n            this.$emit('sendMessage', { isPass: !isPass });\n        },\n        nopass() {\n            // 验证未通过\n            const { isFailed } = this.message;\n            this.$emit('sendFiledMessage', { isFailed: !isFailed });\n        },\n        reimg() {\n            let radomNum = this.getRandomInt(6);\n            this.checkImg = this.imgURl[radomNum];\n        },\n\n        getRandomInt(max) {\n            return Math.floor(Math.random() * max);\n        }\n    },\n    created() {},\n    mounted() {\n        this.reimg()\n        const min = 1;\n        const max = 6;\n        const randomInteger = Math.floor(Math.random() * (max - min + 1)) + min;\n        this.checkImg = `./verify${randomInteger}.png`;\n    },\n    watch: {\n        mainKey(pre, next) {\n            if (pre !== next) {\n                this.reimg();\n            }\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module"}